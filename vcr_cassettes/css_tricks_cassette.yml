---
http_interactions:
- request:
    method: get
    uri: https://css-tricks.com/feed/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 11 Mar 2020 13:23:51 GMT
      Content-Type:
      - application/rss+xml; charset=UTF-8
      Content-Length:
      - '16220'
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=d7122069273aeda2777c32bec5e5270151583933031; expires=Fri, 10-Apr-20
        13:23:51 GMT; path=/; domain=.css-tricks.com; HttpOnly; SameSite=Lax; Secure
      Last-Modified:
      - Tue, 10 Mar 2020 22:25:33 GMT
      Etag:
      - W/"7b0be2d27a01ab0a0b057b637a2df559"
      Link:
      - <https://css-tricks.com/wp-json/>; rel="https://api.w.org/"
      X-Xss-Protection:
      - '1'
      X-Content-Type-Options:
      - nosniff
      Referrer-Policy:
      - no-referrer-when-downgrade
      X-Fw-Server:
      - Flywheel/5.1.0
      X-Fw-Dynamic:
      - 'TRUE'
      X-Fw-Hash:
      - lwxgywlq8s
      X-Fw-Version:
      - 5.0.0
      X-Cacheable:
      - 'YES'
      Fastly-Restarts:
      - '1'
      Accept-Ranges:
      - bytes
      X-Served-By:
      - cache-cpt19521-CPT
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1583933031.253109,VS0,VE0
      Vary:
      - Accept-Encoding
      X-Fw-Serve:
      - 'TRUE'
      X-Fw-Static:
      - 'NO'
      X-Fw-Type:
      - FLYWHEEL_BOT
      Cf-Cache-Status:
      - DYNAMIC
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-25=":443"; ma=86400, h3-24=":443"; ma=86400, h3-23=":443";
        ma=86400
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Server:
      - cloudflare
      Cf-Ray:
      - 572597a54f7c492d-CPT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48cnNzIHZlcnNpb249IjIuMCIKCXhtbG5zOmNvbnRlbnQ9Imh0dHA6Ly9wdXJsLm9yZy9yc3MvMS4wL21vZHVsZXMvY29udGVudC8iCgl4bWxuczp3Znc9Imh0dHA6Ly93ZWxsZm9ybWVkd2ViLm9yZy9Db21tZW50QVBJLyIKCXhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKCXhtbG5zOmF0b209Imh0dHA6Ly93d3cudzMub3JnLzIwMDUvQXRvbSIKCXhtbG5zOnN5PSJodHRwOi8vcHVybC5vcmcvcnNzLzEuMC9tb2R1bGVzL3N5bmRpY2F0aW9uLyIKCXhtbG5zOnNsYXNoPSJodHRwOi8vcHVybC5vcmcvcnNzLzEuMC9tb2R1bGVzL3NsYXNoLyIKCQoJeG1sbnM6Z2VvcnNzPSJodHRwOi8vd3d3Lmdlb3Jzcy5vcmcvZ2VvcnNzIgoJeG1sbnM6Z2VvPSJodHRwOi8vd3d3LnczLm9yZy8yMDAzLzAxL2dlby93Z3M4NF9wb3MjIgoJPgoKPGNoYW5uZWw+Cgk8dGl0bGU+Q1NTLVRyaWNrczwvdGl0bGU+Cgk8YXRvbTpsaW5rIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20vZmVlZC8iIHJlbD0ic2VsZiIgdHlwZT0iYXBwbGljYXRpb24vcnNzK3htbCIgLz4KCTxsaW5rPmh0dHBzOi8vY3NzLXRyaWNrcy5jb208L2xpbms+Cgk8ZGVzY3JpcHRpb24+VGlwcywgVHJpY2tzLCBhbmQgVGVjaG5pcXVlcyBvbiB1c2luZyBDYXNjYWRpbmcgU3R5bGUgU2hlZXRzLjwvZGVzY3JpcHRpb24+Cgk8bGFzdEJ1aWxkRGF0ZT5UdWUsIDEwIE1hciAyMDIwIDIxOjEzOjQ1ICswMDAwPC9sYXN0QnVpbGREYXRlPgoJPGxhbmd1YWdlPmVuLVVTPC9sYW5ndWFnZT4KCTxzeTp1cGRhdGVQZXJpb2Q+Cglob3VybHkJPC9zeTp1cGRhdGVQZXJpb2Q+Cgk8c3k6dXBkYXRlRnJlcXVlbmN5PgoJMQk8L3N5OnVwZGF0ZUZyZXF1ZW5jeT4KCTxnZW5lcmF0b3I+aHR0cHM6Ly93b3JkcHJlc3Mub3JnLz92PTUuMy4yPC9nZW5lcmF0b3I+CjxzaXRlIHhtbG5zPSJjb20td29yZHByZXNzOmZlZWQtYWRkaXRpb25zOjEiPjQ1NTM3ODY4PC9zaXRlPgk8aXRlbT4KCQk8dGl0bGU+QmxvY2sgTGlua3MgQXJlIGEgUGFpbiAoYW5kIE1heWJlIEp1c3QgYSBCYWQgSWRlYSk8L3RpdGxlPgoJCTxsaW5rPmh0dHBzOi8vY3NzLXRyaWNrcy5jb20vYmxvY2stbGlua3MtYXJlLWEtcGFpbi1hbmQtbWF5YmUtanVzdC1hLWJhZC1pZGVhLzwvbGluaz4KCQkJCTxjb21tZW50cz5odHRwczovL2Nzcy10cmlja3MuY29tL2Jsb2NrLWxpbmtzLWFyZS1hLXBhaW4tYW5kLW1heWJlLWp1c3QtYS1iYWQtaWRlYS8jY29tbWVudHM8L2NvbW1lbnRzPgoJCQkJPHB1YkRhdGU+VHVlLCAxMCBNYXIgMjAyMCAyMToxMzo0MiArMDAwMDwvcHViRGF0ZT4KCQk8ZGM6Y3JlYXRvcj48IVtDREFUQVtDaHJpcyBDb3lpZXJdXT48L2RjOmNyZWF0b3I+CgkJCQk8Y2F0ZWdvcnk+PCFbQ0RBVEFbQXJ0aWNsZV1dPjwvY2F0ZWdvcnk+CgkJPGNhdGVnb3J5PjwhW0NEQVRBW2FjY2Vzc2liaWxpdHldXT48L2NhdGVnb3J5PgoJCTxjYXRlZ29yeT48IVtDREFUQVtsaW5rc11dPjwvY2F0ZWdvcnk+CgoJCTxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS8/cD0zMDQ2MDE8L2d1aWQ+CgkJCQk8ZGVzY3JpcHRpb24+PCFbQ0RBVEFbPHA+QXMgd2Ugbm90ZWQgaW4gPGEgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9hLWNvbXBsZXRlLWd1aWRlLXRvLWxpbmtzLWFuZC1idXR0b25zLyI+b3VyIGNvbXBsZXRlIGd1aWRlPC9hPiwgeW91IDxlbT5jYW48L2VtPiBwdXQgYW4gPGNvZGU+JiM2MDthIGhyZWY9IiImIzYyOzwvY29kZT4gbGluayBhcm91bmQgd2hhdGV2ZXIgY2h1bmtzIG9mIEhUTUwgeW91IGxpa2UuIExldCdzIGNhbGwgdGhhdCBhICJibG9jayBsaW5rLiIgTGlrZSB5b3UgYXJlIHdhbnRpbmcgdG8gbGluayB1cCBhbiBlbnRpcmUgIkNhcmQiIG9mIGNvbnRlbnQgYmVjYXVzZSBpdCBtYWtlcyBhIGJpZyBjbGlja2FibGUgdGFyZ2V0LiA8L3A+CjxwcmUgcmVsPSJIVE1MIiBjbGFzcz0id3AtYmxvY2stY3NzdHJpY2tzLWNvZGUtYmxvY2sgbGFuZ3VhZ2UtbWFya3VwIiBkYXRhLWxpbmU9IiI+PGNvZGUgbWFya3VwPSJ0dCI+JiM2MDthIGhyZWY9Ii9hcnRpY2xlLyImIzYwOyEtLSBkaXNwbGF5OiBibG9jazsgLS0mIzYwO2RpdiBjbGFzcz0iY2FyZCImIzYwO2gyQ2FyZCYjNjA7L2gyJiM2MDtpbWcgc3JjPSIuLi4iIGFsdD0iLi4uIiYjNjA7cENvbnRlbnQmIzYwOy9wJiM2MDsvZGl2JiM2MDsvYTwvY29kZT48L3ByZT4KPHA+T24gdGhhdCwgPGEgaHJlZj0iaHR0cHM6Ly9hZHJpYW5yb3NlbGxpLmNvbS8yMDIwLzAyL2Jsb2NrLWxpbmtzLWNhcmRzLWNsaWNrYWJsZS1yZWdpb25zLWV0Yy5odG1sIj5BZHJpYW4gUm9zZWxsaTwvYT46PC9wPgo8YmxvY2txdW90ZSBjbGFzcz0id3AtYmxvY2stcXVvdGUiPgo8cD5QZXJoYXBzIHRoZSB3b3JzdCB0aGluZyB5b3UgY2FuIGRvIGZvciBhIGJsb2NrIGxpbmsgPC9wPgo8L2Jsb2NrcXVvdGU+CjxwPiYjODIzMDsgPGEgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9ibG9jay1saW5rcy1hcmUtYS1wYWluLWFuZC1tYXliZS1qdXN0LWEtYmFkLWlkZWEvIiBjbGFzcz0icmVhZC1tb3JlIj5SZWFkIGFydGljbGUgPC9hPjwvcD4KPHA+VGhlIHBvc3QgPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9ibG9jay1saW5rcy1hcmUtYS1wYWluLWFuZC1tYXliZS1qdXN0LWEtYmFkLWlkZWEvIj5CbG9jayBMaW5rcyBBcmUgYSBQYWluIChhbmQgTWF5YmUgSnVzdCBhIEJhZCBJZGVhKTwvYT4gYXBwZWFyZWQgZmlyc3Qgb24gPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbSI+Q1NTLVRyaWNrczwvYT4uPC9wPgpdXT48L2Rlc2NyaXB0aW9uPgoJCQkJCQkJCTxjb250ZW50OmVuY29kZWQ+PCFbQ0RBVEFbCjxwPkFzIHdlIG5vdGVkIGluIDxhIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20vYS1jb21wbGV0ZS1ndWlkZS10by1saW5rcy1hbmQtYnV0dG9ucy8iPm91ciBjb21wbGV0ZSBndWlkZTwvYT4sIHlvdSA8ZW0+Y2FuPC9lbT4gcHV0IGFuIDxjb2RlPiZsdDthIGhyZWY9IiImZ3Q7PC9jb2RlPiBsaW5rIGFyb3VuZCB3aGF0ZXZlciBjaHVua3Mgb2YgSFRNTCB5b3UgbGlrZS4gTGV0J3MgY2FsbCB0aGF0IGEgImJsb2NrIGxpbmsuIiBMaWtlIHlvdSBhcmUgd2FudGluZyB0byBsaW5rIHVwIGFuIGVudGlyZSAiQ2FyZCIgb2YgY29udGVudCBiZWNhdXNlIGl0IG1ha2VzIGEgYmlnIGNsaWNrYWJsZSB0YXJnZXQuIDwvcD4KCgoKPHNwYW4gaWQ9Im1vcmUtMzA0NjAxIj48L3NwYW4+CgoKCjxwcmUgcmVsPSJIVE1MIiBjbGFzcz0id3AtYmxvY2stY3NzdHJpY2tzLWNvZGUtYmxvY2sgbGFuZ3VhZ2UtbWFya3VwIiBkYXRhLWxpbmU9IiI+PGNvZGUgbWFya3VwPSJ0dCI+Jmx0O2EgaHJlZj0iL2FydGljbGUvIj4gJmx0OyEtLSBkaXNwbGF5OiBibG9jazsgLS0+CiAgJmx0O2RpdiBjbGFzcz0iY2FyZCI+CiAgICAmbHQ7aDI+Q2FyZCZsdDsvaDI+CiAgICAmbHQ7aW1nIHNyYz0iLi4uIiBhbHQ9Ii4uLiI+CiAgICAmbHQ7cD5Db250ZW50Jmx0Oy9wPgogICZsdDsvZGl2PgombHQ7L2E+PC9jb2RlPjwvcHJlPgoKCgo8cD5PbiB0aGF0LCA8YSBocmVmPSJodHRwczovL2FkcmlhbnJvc2VsbGkuY29tLzIwMjAvMDIvYmxvY2stbGlua3MtY2FyZHMtY2xpY2thYmxlLXJlZ2lvbnMtZXRjLmh0bWwiPkFkcmlhbiBSb3NlbGxpPC9hPjo8L3A+CgoKCjxibG9ja3F1b3RlIGNsYXNzPSJ3cC1ibG9jay1xdW90ZSI+PHA+UGVyaGFwcyB0aGUgd29yc3QgdGhpbmcgeW91IGNhbiBkbyBmb3IgYSBibG9jayBsaW5rIGlzIHRvIHdyYXAgZXZlcnl0aGluZyBpbiB0aGUmbmJzcDs8Y29kZT4mbHQ7YSBocmVmJmd0OzwvY29kZT4uPGJyPjxicj5bLi4uXSBmb3IgYSBzY3JlZW4gcmVhZGVyIHVzZXIgdGhlIGVudGlyZSBzdHJpbmcgaXMgcmVhZCB3aGVuIHRhYmJpbmcgdGhyb3VnaCBjb250cm9scy4gSW4gdGhlIGZvbGxvd2luZyBleGFtcGxlLCB0aGUgZmlyc3QgbGluayBjb250YWlucyB0aGUgaGVhZGluZywgaW1hZ2UgKHdpdGhvdXQgZGVjbGFyaW5nIGl0IGFzIGFuIGltYWdlKSwgYW5kIGJsb2NrIG9mIHRleHQsIHRha2luZyBhYm91dCAyNSBzZWNvbmRzIHRvIHJlYWQgYmVmb3JlIGFubm91bmNpbmcgaXQgYXMgYSBsaW5rLiBXaGVuIHRhYmJpbmcsIHlvdSBkbyBub3QgYWx3YXlzIGtub3cgdGhlIGNvbnRyb2wgdHlwZSB1bnRpbCB0aGUgYWNjZXNzaWJsZSBuYW1lIGlzIGNvbXBsZXRlLjwvcD48L2Jsb2NrcXVvdGU+CgoKCjxwPihUaGUgPGEgaHJlZj0iaHR0cHM6Ly9jb2RlcGVuLmlvL2FhcmRyaWFuL3Blbi92WU9HcFhiIj5leGFtcGxlPC9hPiBpcyBhIHByZXR0eSBub3JtYWwgbG9va2luZyBjYXJkIHdpdGggYSBoZWFkZXIsIGltYWdlLCBhbmQgcGFyYWdyYXBoLik8L3A+CgoKCjxwPlNvIGRvbid0IGRvIHRoYXQuIDwvcD4KCgoKPHA+VGhlIGFsdGVybmF0aXZlIGlzIHRvIGxldCB0aGUgbGluayBiZSAibm9ybWFsIiBsaWtlIGp1c3QgdGhlIGhlYWRlci4gPC9wPgoKCgo8cHJlIHJlbD0iSFRNTCIgY2xhc3M9IndwLWJsb2NrLWNzc3RyaWNrcy1jb2RlLWJsb2NrIGxhbmd1YWdlLW1hcmt1cCIgZGF0YS1saW5lPSIiPjxjb2RlIG1hcmt1cD0idHQiPiZsdDtkaXYgY2xhc3M9ImNhcmQiPgogICZsdDtoMj4mbHQ7YSBocmVmPSIvYXJ0aWNsZS8iPkFydGljbGUmbHQ7L2E+Jmx0Oy9oMj4KICAmbHQ7aW1nIHNyYz0iLi4uIiBhbHQ9Ii4uLiI+CiAgJmx0O3A+Q29udGVudCZsdDsvcD4KJmx0Oy9kaXY+PC9jb2RlPjwvcHJlPgoKCgo8cD5UaGUgZXh0ZW5kaW5nIHRoZSAiY2xpY2thYmxlIGFyZWEiIG9mIHRoZSBsaW5rIHRvIGNvdmVyIHRoZSBlbnRpcmUgYXJlYS48L3A+CgoKCjxwcmUgcmVsPSJDU1MiIGNsYXNzPSJ3cC1ibG9jay1jc3N0cmlja3MtY29kZS1ibG9jayBsYW5ndWFnZS1jc3MiIGRhdGEtbGluZT0iIj48Y29kZSBtYXJrdXA9InR0Ij4uY2FyZCB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9Ci5jYXJkIGgyIGE6OmFmdGVyIHsKICBjb250ZW50OiAiIjsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAwOwogIGxlZnQ6IDA7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwp9PC9jb2RlPjwvcHJlPgoKCgo8cD5UaGF0IHdvcmtzIGZvciB0aGUgY2xpY2thYmxlIGFyZWEgYW5kIHNvbHZlcyB0aGUgcGVuYWx0eSB0byBzY3JlZW4gcmVhZGVyIHVzZXJzLjwvcD4KCgoKPHA+QnV0IHRoZXJlIGlzIGFub3RoZXIgcHJvYmxlbSB0aGF0IGh1cnRzIGJvdGggb2YgdGhlc2Ugc29sdXRpb25zLCBhbmQgaXQncyA8c3Ryb25nPnRleHQgc2VsZWN0aW9uPC9zdHJvbmc+LiBZb3UgY2FuJ3QganVzdCBwdXQgeW91ciBjdXJzb3Igc29tZXdoZXJlIGluIHRoZSBjYXJkIGFuZCBzZWxlY3QgdGV4dCBub3JtYWxseS4gVGhlIGNsaWNrIGFjdGl2YXRlcyB0aGUgbGluaywgd2FpdGluZyBmb3IgeW91IHRvIDxjb2RlPm1vdXNldXA8L2NvZGU+IHdoaWxlIHN0aWxsIG9uIHRoZSBsaW5rIHRvIHRyaWdnZXIgaXQuIFlvdSBkb24ndCBnZXQgdGhlIGFiaWxpdHkgdG8gc2VsZWN0IGlubmVyIHBhcnRzIG9mIHRoZSB0ZXh0IGFzIHlvdSB3b3VsZCBwcm9iYWJseSBleHBlY3QuIEl0IGRvZXNuJ3QgcHJldmVudCB0aGUgYWJpbGl0eSB0byBzZWxlY3QgdGhlIHRleHQgYXQgYWxsLCBidXQgaXQgbWFrZXMgaXQgYXdrd2FyZCBhbmQgYW5ub3lpbmcuPC9wPgoKCgo8cD5JJ20gbm90IHN1cmUgdGhhdCBpcyBlYXNpbHkgc29sdmVhYmxlLiBQZXJoYXBzIHRoZXJlIGlzIHNvbWUgZXhvdGljIEphdmFTY3JpcHQgc29sdXRpb24gdGhhdCBjYW4gZGV0ZWN0IGlmIHlvdSd2ZSBzdGFydGVkIHRvIHNlbGVjdCB0ZXh0IGFuZCB0aGVuIG5vdCB0cmlnZ2VyIGEgY2xpY2ssIGJ1dCBpZiB5b3UgY2xpY2sgd2l0aG91dCBkcmFnZ2luZyB0aGVuIGl0IGRvZXMgZ28gdG8gdGhlIGxpbmsuIFNvbWV0aGluZyBhYm91dCB0aGF0IGlzIGEgYml0IHJlZC1mbGFnZ3kgdG8gbWUgdGhvdWdoLiA8L3A+CgoKCjxwPkFsbCBpbiBhbGwsIEknZCBzYXkgYmxvY2sgbGlua3MgYXJlIGp1c3QgYSBiYWQgaWRlYS4gQnV0IEknZCBsb3ZlIHRvIGJlIHByb3ZlbiB3cm9uZyBhbmQgc2VlIGEgcmVhbGx5IGdvb2QgaW1wbGVtZW50YXRpb24gdGhhdCBzb2x2ZXMgYWxsIHRoZXNlIGlzc3Vlcy48L3A+CjxwPlRoZSBwb3N0IDxhIHJlbD0ibm9mb2xsb3ciIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20vYmxvY2stbGlua3MtYXJlLWEtcGFpbi1hbmQtbWF5YmUtanVzdC1hLWJhZC1pZGVhLyI+QmxvY2sgTGlua3MgQXJlIGEgUGFpbiAoYW5kIE1heWJlIEp1c3QgYSBCYWQgSWRlYSk8L2E+IGFwcGVhcmVkIGZpcnN0IG9uIDxhIHJlbD0ibm9mb2xsb3ciIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20iPkNTUy1Ucmlja3M8L2E+LjwvcD4KXV0+PC9jb250ZW50OmVuY29kZWQ+CgkJCQkJCQk8d2Z3OmNvbW1lbnRSc3M+aHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9ibG9jay1saW5rcy1hcmUtYS1wYWluLWFuZC1tYXliZS1qdXN0LWEtYmFkLWlkZWEvZmVlZC88L3dmdzpjb21tZW50UnNzPgoJCTxzbGFzaDpjb21tZW50cz40PC9zbGFzaDpjb21tZW50cz4KCQkJCQkJPHBvc3QtaWQgeG1sbnM9ImNvbS13b3JkcHJlc3M6ZmVlZC1hZGRpdGlvbnM6MSI+MzA0NjAxPC9wb3N0LWlkPgk8L2l0ZW0+CgkJPGl0ZW0+CgkJPHRpdGxlPkNvbnNpZGVyYXRpb25zIFdoZW4gQ2hvb3NpbmcgRm9udHMgZm9yIGEgTXVsdGlsaW5ndWFsIFdlYnNpdGU8L3RpdGxlPgoJCTxsaW5rPmh0dHBzOi8vY3NzLXRyaWNrcy5jb20vY29uc2lkZXJhdGlvbnMtd2hlbi1jaG9vc2luZy1mb250cy1mb3ItYS1tdWx0aWxpbmd1YWwtd2Vic2l0ZS88L2xpbms+CgkJCQk8Y29tbWVudHM+aHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9jb25zaWRlcmF0aW9ucy13aGVuLWNob29zaW5nLWZvbnRzLWZvci1hLW11bHRpbGluZ3VhbC13ZWJzaXRlLyNjb21tZW50czwvY29tbWVudHM+CgkJCQk8cHViRGF0ZT5UdWUsIDEwIE1hciAyMDIwIDE0OjM1OjEyICswMDAwPC9wdWJEYXRlPgoJCTxkYzpjcmVhdG9yPjwhW0NEQVRBW09tYXIgQm91cmhhb3V0YV1dPjwvZGM6Y3JlYXRvcj4KCQkJCTxjYXRlZ29yeT48IVtDREFUQVtBcnRpY2xlXV0+PC9jYXRlZ29yeT4KCQk8Y2F0ZWdvcnk+PCFbQ0RBVEFbZm9udCBsb2FkaW5nXV0+PC9jYXRlZ29yeT4KCQk8Y2F0ZWdvcnk+PCFbQ0RBVEFbZm9udC1mYWNlXV0+PC9jYXRlZ29yeT4KCQk8Y2F0ZWdvcnk+PCFbQ0RBVEFbZ2x5cGhzXV0+PC9jYXRlZ29yeT4KCQk8Y2F0ZWdvcnk+PCFbQ0RBVEFbc3lzdGVtIGZvbnRzXV0+PC9jYXRlZ29yeT4KCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwczovL2Nzcy10cmlja3MuY29tLz9wPTMwNDIzNzwvZ3VpZD4KCQkJCTxkZXNjcmlwdGlvbj48IVtDREFUQVs8cD5BcyBhIGZyb250LWVuZCBkZXZlbG9wZXIgd29ya2luZyBmb3IgY2xpZW50cyBhbGwgb3ZlciB0aGUgd29ybGQsIEkndmUgYWx3YXlzIHN0cnVnZ2xlZCB0byBkZWFsIHdpdGggbXVsdGlsaW5ndWFsIHdlYnNpdGVzJiMxNjA74oCUIGVzcGVjaWFsbHkgY2FzZXMgd2hlcmUmIzE2MDtib3RoJiMxNjA7cmlnaHQtdG8tbGVmdCYjMTYwOyhSVEwpJiMxNjA7YW5kJiMxNjA7bGVmdC10by1yaWdodCYjMTYwOyhMVFIpJiMxNjA7YXJlIHVzZWQuIFRoYXQgc2FpZCwgSeKAmXZlIGxlYXJuZWQgYSBmZXcgdGhpbmdzIGFsb25nIHRoZSB3YXkgYW5kIGFtIGdvaW5nIHRvIHNoYXJlIGEgZmV3IHRpcHMgaW4gdGhpcyBwb3N0LjwvcD4KPHA+TGV04oCZcyB3b3JrIGluJiMxNjA7QXJhYmljJiMxNjA7YW5kIEVuZ2xpc2gsIG5vdCBqdXN0JiMxNjA7YmVjYXVzZSYjMTYwO0FyYWJpYyYjMTYwO2lzIG15IG5hdGl2ZSBsYW5ndWFnZSwmIzE2MDtidXQgYmVjYXVzZSBpdOKAmXMgYSBjbGFzc2ljIGV4YW1wbGUgb2YgUlRMIGluIHVzZS48L3A+CjxwPkFkZGluZyBSVEwgc3VwcG9ydCB0byBhIHNpdGU8L3A+CjxwPkJlZm9yZSB0aGlzJiMxNjA7dGhvdWdoLCYjMTYwO3dl4oCZbGwgd2FudCYjMTYwO3RvIGFkZCBzdXBwb3J0IGZvciBhbiBSVEwgbGFuZ3VhZ2Ugb24mIzE2MDtvdXIgc2l0ZS4gVGhlcmUgJiM4MjMwOyA8YSBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tL2NvbnNpZGVyYXRpb25zLXdoZW4tY2hvb3NpbmctZm9udHMtZm9yLWEtbXVsdGlsaW5ndWFsLXdlYnNpdGUvIiBjbGFzcz0icmVhZC1tb3JlIj5SZWFkIGFydGljbGUgPC9hPjwvcD4KPHA+VGhlIHBvc3QgPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9jb25zaWRlcmF0aW9ucy13aGVuLWNob29zaW5nLWZvbnRzLWZvci1hLW11bHRpbGluZ3VhbC13ZWJzaXRlLyI+Q29uc2lkZXJhdGlvbnMgV2hlbiBDaG9vc2luZyBGb250cyBmb3IgYSBNdWx0aWxpbmd1YWwgV2Vic2l0ZTwvYT4gYXBwZWFyZWQgZmlyc3Qgb24gPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbSI+Q1NTLVRyaWNrczwvYT4uPC9wPgpdXT48L2Rlc2NyaXB0aW9uPgoJCQkJCQkJCTxjb250ZW50OmVuY29kZWQ+PCFbQ0RBVEFbCjxwPkFzIGEgZnJvbnQtZW5kIGRldmVsb3BlciB3b3JraW5nIGZvciBjbGllbnRzIGFsbCBvdmVyIHRoZSB3b3JsZCwgSSd2ZSBhbHdheXMgc3RydWdnbGVkIHRvIGRlYWwgd2l0aCBtdWx0aWxpbmd1YWwgd2Vic2l0ZXMmbmJzcDvigJQgZXNwZWNpYWxseSBjYXNlcyB3aGVyZSZuYnNwO2JvdGgmbmJzcDtyaWdodC10by1sZWZ0Jm5ic3A7KFJUTCkmbmJzcDthbmQmbmJzcDtsZWZ0LXRvLXJpZ2h0Jm5ic3A7KExUUikmbmJzcDthcmUgdXNlZC4gVGhhdCBzYWlkLCBJ4oCZdmUgbGVhcm5lZCBhIGZldyB0aGluZ3MgYWxvbmcgdGhlIHdheSBhbmQgYW0gZ29pbmcgdG8gc2hhcmUgYSBmZXcgdGlwcyBpbiB0aGlzIHBvc3QuPC9wPgoKCgo8cD5MZXTigJlzIHdvcmsgaW4mbmJzcDtBcmFiaWMmbmJzcDthbmQgRW5nbGlzaCwgbm90IGp1c3QmbmJzcDtiZWNhdXNlJm5ic3A7QXJhYmljJm5ic3A7aXMgbXkgbmF0aXZlIGxhbmd1YWdlLCZuYnNwO2J1dCBiZWNhdXNlIGl04oCZcyBhIGNsYXNzaWMgZXhhbXBsZSBvZiBSVEwgaW4gdXNlLjwvcD4KCgoKPGgzPkFkZGluZyBSVEwgc3VwcG9ydCB0byBhIHNpdGU8L2gzPgoKCgo8cD5CZWZvcmUgdGhpcyZuYnNwO3Rob3VnaCwmbmJzcDt3ZeKAmWxsIHdhbnQmbmJzcDt0byBhZGQgc3VwcG9ydCBmb3IgYW4gUlRMIGxhbmd1YWdlIG9uJm5ic3A7b3VyIHNpdGUuIFRoZXJlIGFyZSB0d28gd2F5cyB3ZSBjYW4gZ28gYWJvdXQgdGhpcywgYm90aCBvZiB3aGljaCBhcmVu4oCZdCBleGFjdGx5IGlkZWFsLjwvcD4KCgoKPGg0Pk5vdCBpZGVhbDombmJzcDtVc2UgYSBzcGVjaWZpYyBmb250IGZvciBlYWNoIGRpcmVjdGlvbjwvaDQ+CgoKCjxwPlRoZSBmaXJzdCB3YXkgd2UgY291bGQgZ28gYWJvdXQgdGhpcyBpcyB0byZuYnNwO3JlbHkgb24gdGhlIGRpcmVjdGlvbiZuYnNwOyhkaXIpJm5ic3A7YXR0cmlidXRlIG9uJm5ic3A7YW55IGdpdmVuIGVsZW1lbnQmbmJzcDsod2hpY2gmbmJzcDtpcyZuYnNwO3VzdWFsbHkgdGhlJm5ic3A7Jmx0O2h0bWwmZ3Q7Jm5ic3A7ZWxlbWVudCBzbyBpdCBzZXRzIHRoZSBkaXJlY3Rpb24mbmJzcDtnbG9iYWxseSk6PC9wPgoKCgo8cHJlIHJlbD0iQ1NTIiBjbGFzcz0id3AtYmxvY2stY3NzdHJpY2tzLWNvZGUtYmxvY2sgbGFuZ3VhZ2UtY3NzIiBkYXRhLWxpbmU9IiI+PGNvZGUgbWFya3VwPSJ0dCI+LyogRm9yIExUUiwgdXNlIFJvYm90byAqLwpbZGlyPWx0cl0gYm9keSB7CiAgZm9udC1mYW1pbHk6ICJSb2JvdG8iLCBzYW5zLXNlcmlmOwp9CgovKiBGb3IgUlRMLCB1c2UgQW1pcmkgKi8KW2Rpcj1ydGxdIGJvZHkgewogIGZvbnQtZmFtaWx5OiAiQW1pcmkiLCBzYW5zLXNlcmlmOwp9PC9jb2RlPjwvcHJlPgoKCgo8cD48YnI+PGEgcmVsPSJub3JlZmVycmVyIG5vb3BlbmVyIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvcG9zdGNzcy1ydGwiPlBvc3RDU1MtUlRMPC9hPiZuYnNwO21ha2VzIGl0IGV2ZW4gZWFzaWVyIHRvIGdlbmVyYXRlIHN0eWxlcyBmb3IgZWFjaCBkaXJlY3Rpb24sJm5ic3A7YnV0IHRoZSBpc3N1ZSB3aXRoIHRoaXMgbWV0aG9kIGlzIHRoYXQgeW91IGFyZSBvbmx5IHVzaW5nIG9uZSBmb250IHdoaWNoIGlzIG5vdCBpZGVhbCBpZiB5b3UgaGF2ZSBtdWx0aXBsZSBsYW5ndWFnZXMgaW4gb25lIHBhcmFncmFwaC48L3A+CgoKCjxwPkhlcmXigJlzIHdoeS4mbmJzcDtZb3XigJlsbCBmaW5kIHRoYXQmbmJzcDttdWx0aS1saW5ndWFsJm5ic3A7cGFyYWdyYXBocyBtZXNzIHVwIHRoZSBVSSBiZWNhdXNlJm5ic3A7dGhlIEFyYWJpYyBnbHlwaHMmbmJzcDthcmUgZ2l2ZW4mbmJzcDthIGRlZmF1bHQgZm9udCB0aGF0IGRvZXNuJ3QgYWxpZ24gd2l0aCB0aGUmbmJzcDtlbGVtZW50LjwvcD4KCgoKPGRpdiBjbGFzcz0id3AtYmxvY2stY3AtY29kZXBlbi1ndXRlbmJlcmctZW1iZWQtYmxvY2sgY3BfZW1iZWRfd3JhcHBlciI+PGlmcmFtZSBpZD0iY3BfZW1iZWRfWXpYS2FiWiIgc3JjPSIvL2NvZGVwZW4uaW8vYW5vbi9lbWJlZC9ZelhLYWJaP2hlaWdodD0zNTAmYW1wO3RoZW1lLWlkPTEmYW1wO3NsdWctaGFzaD1ZelhLYWJaJmFtcDtkZWZhdWx0LXRhYj1yZXN1bHQiIGhlaWdodD0iMzUwIiBzY3JvbGxpbmc9Im5vIiBmcmFtZWJvcmRlcj0iMCIgYWxsb3dmdWxsc2NyZWVuIGFsbG93cGF5bWVudHJlcXVlc3QgbmFtZT0iQ29kZVBlbiBFbWJlZCBZelhLYWJaIiB0aXRsZT0iQ29kZVBlbiBFbWJlZCBZelhLYWJaIiBjbGFzcz0iY3BfZW1iZWRfaWZyYW1lIiBzdHlsZT0id2lkdGg6MTAwJTtvdmVyZmxvdzpoaWRkZW4iPkNvZGVQZW4gRW1iZWQgRmFsbGJhY2s8L2lmcmFtZT48L2Rpdj4KCgoKPHA+SXQmbmJzcDttaWdodCBiZSB3b3JzZSZuYnNwO2luIHNvbWUgYnJvd3NlcnMgb3ZlciBvdGhlcnMuPC9wPgoKCgo8aDQ+QWxzbyBub3QgaWRlYWw6Jm5ic3A7VXNlIG9uZSBzaW5nbGUgZm9udCB0aGF0IHN1cHBvcnRzIGJvdGggbGFuZ3VhZ2VzPC9oND4KCgoKPHA+VGhlIHNlY29uZCBvcHRpb24gY291bGQgYmUgdXNpbmcmbmJzcDs8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cudGRlcmZsaW5nZXIuY29tL2VuL2Jlc3QtbXVsdGlsaW5ndWFsLXdlYi1mb250cyIgcmVsPSJub3JlZmVycmVyIG5vb3BlbmVyIj5mb250cyB0aGF0IG9mZmVyIHN1cHBvcnQgZm9yIGJvdGggZGlyZWN0aW9uczwvYT4uJm5ic3A7SG93ZXZlciwgaW4gbXkgcGVyc29uYWwgZXhwZXJpZW5jZSwmbmJzcDt1c2luZyBqdXN0IG9uZSZuYnNwO2ZvbnQmbmJzcDtmb3IgYm90aCBsYW5ndWFnZXMgbGltaXRzIGNyZWF0aXZpdHkgYW5kIGZyZWVkb20gdG8gdXNlIGEgZGlmZmVyZW50IGZvbnQgZm9yIGVhY2ggZGlyZWN0aW9uLiZuYnNwO0l0IG1pZ2h0IG5vdCBiZSB0aGF0IGJhZCwgZGVwZW5kaW5nIG9uIHRoZSBkZXNpZ24gcmVxdWlyZW1lbnRzLiBCdXQgSeKAmXZlIGRlZmluaXRlbHkgd29ya2VkIG9uIHByb2plY3RzIHdoZXJlIGl0IG1ha2VzIGEgZGlmZmVyZW5jZS48YnI+PC9wPgoKCgo8aDM+T0ssIHNvIHdoYXQgdGhlbj88L2gzPgoKCgo8cD5XZSBuZWVkIGEgc2ltcGxlciBzb2x1dGlvbi4mbmJzcDtBY2NvcmRpbmcgdG8mbmJzcDs8YSByZWw9Im5vcmVmZXJyZXIgbm9vcGVuZXIiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9DU1MvZm9udC1mYW1pbHkiPk1ETjwvYT46PC9wPgoKCgo8YmxvY2txdW90ZSBjbGFzcz0id3AtYmxvY2stcXVvdGUiPjxwPkZvbnQgc2VsZWN0aW9uIGRvZXMgbm90IHNpbXBseSBzdG9wIGF0IHRoZSBmaXJzdCBmb250IGluIHRoZSBsaXN0IHRoYXQgaXMgb24gdGhlIHVzZXIncyBzeXN0ZW0uIFJhdGhlciwgZm9udCBzZWxlY3Rpb24gaXMgZG9uZSBvbmUgY2hhcmFjdGVyIGF0IGEgdGltZSwgc28gdGhhdCBpZiBhbiBhdmFpbGFibGUgZm9udCBkb2VzIG5vdCBoYXZlIGEgZ2x5cGggZm9yIGEgbmVlZGVkIGNoYXJhY3RlciwgdGhlIGxhdHRlciBmb250cyBhcmUgdHJpZWQuPC9wPjwvYmxvY2txdW90ZT4KCgoKPHA+TWVhbmluZywgd2UgY2FuIHN0aWxsIHVzZSB0aGUgZm9udC1mYW1pbHkgcHJvcGVydHkgYnV0IHVzaW5nIGEgZmFsbGJhY2sgaW4gY2FzZXMgd2hlcmUgdGhlIGZpcnN0IGZvbnQgZG9lc24ndCBoYXZlIGEgZ2x5cGggZm9yIGEgY2hhcmFjdGVyLiBUaGlzIGFjdHVhbGx5IHNvbHZlcyBib3RoIG9mIHRoZSBpc3N1ZXMgYWJvdmUsIHR3byBiaXJkcyB3aXRoIG9uZSBzdG9uZSBzdHlsZSE8L3A+CgoKCjxwcmUgcmVsPSJDU1MiIGNsYXNzPSJ3cC1ibG9jay1jc3N0cmlja3MtY29kZS1ibG9jayBsYW5ndWFnZS1jc3MiIGRhdGEtbGluZT0iIj48Y29kZSBtYXJrdXA9InR0Ij5ib2R5IHsKICBmb250LWZhbWlseTogJ1JvYm90bycsICdBbWlyaScsICdHYWxhZGEnLCBzYW5zLXNlcmlmOwp9PC9jb2RlPjwvcHJlPgoKCgo8ZGl2IGNsYXNzPSJ3cC1ibG9jay1jcC1jb2RlcGVuLWd1dGVuYmVyZy1lbWJlZC1ibG9jayBjcF9lbWJlZF93cmFwcGVyIj48aWZyYW1lIGlkPSJjcF9lbWJlZF9HUmdMcVlMIiBzcmM9Ii8vY29kZXBlbi5pby9hbm9uL2VtYmVkL0dSZ0xxWUw/aGVpZ2h0PTUwMCZhbXA7dGhlbWUtaWQ9MSZhbXA7c2x1Zy1oYXNoPUdSZ0xxWUwmYW1wO2RlZmF1bHQtdGFiPXJlc3VsdCIgaGVpZ2h0PSI1MDAiIHNjcm9sbGluZz0ibm8iIGZyYW1lYm9yZGVyPSIwIiBhbGxvd2Z1bGxzY3JlZW4gYWxsb3dwYXltZW50cmVxdWVzdCBuYW1lPSJDb2RlUGVuIEVtYmVkIEdSZ0xxWUwiIHRpdGxlPSJDb2RlUGVuIEVtYmVkIEdSZ0xxWUwiIGNsYXNzPSJjcF9lbWJlZF9pZnJhbWUiIHN0eWxlPSJ3aWR0aDoxMDAlO292ZXJmbG93OmhpZGRlbiI+Q29kZVBlbiBFbWJlZCBGYWxsYmFjazwvaWZyYW1lPjwvZGl2PgoKCgo8aDM+V2h5IGRvZXMgdGhpcyB3b3JrPzwvaDM+CgoKCjxwPkp1c3QgbGlrZSZuYnNwO3RoZSB3YXkmbmJzcDtmbGV4Ym94Jm5ic3A7YW5kIENTUyZuYnNwO2dyaWQsJm5ic3A7bWFrZSBDU1MmbmJzcDtsYXlvdXRzJm5ic3A7YSBsb3QgbW9yZSBmbGV4aWJsZSwgdGhlIGZvbnQgbWF0Y2hpbmcgYWxnb3JpdGhtIG1ha2VzIGl0IGV2ZW4gZWFzaWVyIHRvIHdvcmsgd2l0aCBjb250ZW50IGluIGRpZmZlcmVudCBsYW5ndWFnZXMuJm5ic3A7SGVyZeKAmXMgd2hhdCZuYnNwOzxhIHJlbD0ibm9yZWZlcnJlciBub29wZW5lciIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtZm9udHMtNC8jY2x1c3Rlci1tYXRjaGluZyI+VzNDIHNheXM8L2E+Jm5ic3A7YWJvdXQgaXQgbWF0Y2hpbmcgY2hhcmFjdGVycyB0byBmb250czo8L3A+CgoKCjxibG9ja3F1b3RlIGNsYXNzPSJ3cC1ibG9jay1xdW90ZSI+PHA+V2hlbiB0ZXh0IGNvbnRhaW5zIGNoYXJhY3RlcnMgc3VjaCBhcyBjb21iaW5pbmcgbWFya3MsIGlkZWFsbHkgdGhlIGJhc2UgY2hhcmFjdGVyIHNob3VsZCBiZSByZW5kZXJlZCB1c2luZyB0aGUgc2FtZSBmb250IGFzIHRoZSBtYXJrLCB0aGlzIGFzc3VyZXMgcHJvcGVyIHBsYWNlbWVudCBvZiB0aGUgbWFyay4gRm9yIHRoaXMgcmVhc29uLCB0aGUgZm9udCBtYXRjaGluZyBhbGdvcml0aG0gZm9yIGNsdXN0ZXJzIGlzIG1vcmUgc3BlY2lhbGl6ZWQgdGhhbiB0aGUgZ2VuZXJhbCBjYXNlIG9mIG1hdGNoaW5nIGEgc2luZ2xlIGNoYXJhY3RlciBieSBpdHNlbGYuJm5ic3A7PHN0cm9uZz5Gb3Igc2VxdWVuY2VzIGNvbnRhaW5pbmcgdmFyaWF0aW9uIHNlbGVjdG9ycywgd2hpY2ggaW5kaWNhdGUgdGhlIHByZWNpc2UgZ2x5cGggdG8gYmUgdXNlZCBmb3IgYSBnaXZlbiBjaGFyYWN0ZXIsIHVzZXIgYWdlbnRzIGFsd2F5cyBhdHRlbXB0IHN5c3RlbSBmb250IGZhbGxiYWNrIHRvIGZpbmQgdGhlIGFwcHJvcHJpYXRlIGdseXBoIGJlZm9yZSB1c2luZyB0aGUgZGVmYXVsdCBnbHlwaCBvZiB0aGUgYmFzZSBjaGFyYWN0ZXIuPC9zdHJvbmc+PC9wPjxjaXRlPihFbXBoYXNpcyBtaW5lKTwvY2l0ZT48L2Jsb2NrcXVvdGU+CgoKCjxwPkFuZCBob3cgYXJlIGZvbnRzIG1hdGNoZWQ/IFRoZSBzcGVjIG91dGxpbmVzIHRoZSBzdGVwcyB0aGUgYWxnb3JpdGhtIHRha2VzLCB3aGljaCBJ4oCZbGwgcGFyYXBocmFzZSBoZXJlLjwvcD4KCgoKPHVsPjxsaT5UaGUgYnJvd3NlciBsb29rcyBhdCBhIGNsdXN0ZXIgb2YgdGV4dCBhbmQgdHJpZXMgdG8gbWF0Y2ggaXQgdG8gdGhlIGxpc3Qgb2YgZm9udHMgdGhhdCBhcmUgZGVjbGFyZWQgaW4gQ1NTLjwvbGk+PGxpPklmIGl0IGZpbmRzIGEgZm9udCB0aGF0IHN1cHBvcnRzIGFsbCBvZiB0aGUgY2hhcmFjdGVycywgZ3JlYXQhIFRoYXTigJlzIHdoYXQgZ2V0cyB1c2VkLjwvbGk+PGxpPklmIHRoZSBicm93c2VyIGRvZXNu4oCZdCBmaW5kIGEgZm9udCB0aGF0IHN1cHBvcnRzJm5ic3A7PGVtPmFsbDwvZW0+Jm5ic3A7b2YgdGhlIGNoYXJhY3RlcnMsIGl0IHJlLXJlYWRzIHRoZSBsaXN0IG9mIGZvbnRzIHRvIGZpbmQgb25lIHRoYXQgc3VwcG9ydHMgdGhlIHVubWF0Y2hlZCBjaGFyYWN0ZXJzIGFuZCBhcHBsaWVzIGl0IHRvIHRob3NlIHNwZWNpZmljIGNoYXJhY3RlcnMuJm5ic3A7PC9saT48bGk+SWYgdGhlIGJyb3dzZXIgZG9lc27igJl0IGZpbmQgYSBmb250IGluIHRoZSBsaXN0IHRoYXQgbWF0Y2hlcyBuZWl0aGVyJm5ic3A7PGVtPmFsbDwvZW0+Jm5ic3A7b2YgdGhlIGNoYXJhY3RlcnMgaW4gdGhlIGNsdXN0ZXIgbm9yIGluZGl2aWR1YWwgb25lcywgdGhlbiBpdCByZWFjaGVzIGZvciB0aGUmbmJzcDs8YSByZWw9Im5vcmVmZXJyZXIgbm9vcGVuZXIiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tL3NuaXBwZXRzL2Nzcy9zeXN0ZW0tZm9udC1zdGFjay8iPmRlZmF1bHQgc3lzdGVtIGZvbnQ8L2E+Jm5ic3A7YW5kIGNoZWNrcyB0aGF0IGl0IHN1cHBvcnRzIGFsbCBvZiB0aGUgY2hhcmFjdGVycy48L2xpPjxsaT5JZiB0aGUgZGVmYXVsdCBzeXN0ZW0gZm9udCBtYXRjaGVzLCBhZ2FpbiwgZ3JlYXQhIFRoYXTigJlzIHdoYXQgZ2V0cyB1c2VkLjwvbGk+PGxpPklmIHRoZSBzeXN0ZW0gZm9udCBkb2VzbuKAmXQgd29yaywgdGhhdOKAmXMgd2hlcmUgdGhlIGJyb3dzZXIgcmVuZGVycyBhIGJyb2tlbiBnbHlwaC48L2xpPjwvdWw+CgoKCjxoMz5MZXTigJlzIHRhbGsgcGVyZm9ybWFuY2U8L2gzPgoKCgo8cD5UaGUgc2VxdWVuY2Ugd2UganVzdCBsb29rZWQgYXQgY291bGQgYmUgdGF4aW5nIG9uIGEgc2l0ZeKAmXMgcGVyZm9ybWFuY2UuIEltYWdpbmUgdGhlIGJyb3dzZXIgaGF2aW5nIHRvIGxvb3AgdGhyb3VnaCBldmVyeSBkZWZpbmVkIGZhbGxiYWNrLCBtYXRjaCBzcGVjaWZpYyBjaGFyYWN0ZXJzIHRvIGdseXBocywgYW5kIGRvd25sb2FkIGZvbnQgZmlsZXMgYmFzZWQgb24gd2hhdCBpdCBmaW5kcy4gVGhhdCBjYW4gYWRkIHVwIHRvIGEgbG90IG9mIHdvcmssIG5vdCB0byBtZW50aW9uJm5ic3A7PGEgcmVsPSJub3JlZmVycmVyIG5vb3BlbmVyIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9mb3V0LWZvaXQtZm9mdC8iPkZPVVQ8L2E+Jm5ic3A7YW5kIG90aGVyIHJlbmRlcmluZyB3ZWlyZG5lc3MuPC9wPgoKCgo8cD5UaGUgZ29hbCBpcyB0byBsZXQgdGhlJm5ic3A7PGEgcmVsPSJub3JlZmVycmVyIG5vb3BlbmVyIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cudzMub3JnL1RSLzIwMTgvUkVDLWNzcy1mb250cy0zLTIwMTgwOTIwLyNmb250LW1hdGNoaW5nLWFsZ29yaXRobSI+Zm9udCBtYXRjaGluZyBhbGdvcml0aG08L2E+Jm5ic3A7ZGVjaWRlIHdoaWNoIGZvbnQgdG8gYXBwbHkgdG8gZWFjaCB0ZXh0IGluc3RlYWQgb2YgcmVseWluZyBvbiBvbmUgZm9udCBmb3IgYm90aCBsYW5ndWFnZXMgb3IgYWRkaW5nIGV4dHJhIENTUyB0byBoYW5kbGUgZGlmZmVyZW50IGRpcmVjdGlvbnMuJm5ic3A7SWYgYSBmb250IGlzIG5ldmVyIGFwcGxpZWQgdG8gYW55dGhpbmcmbmJzcDsoc2F5Jm5ic3A7YSBwYXJ0aWN1bGFyIHBhZ2UgaXMgaW4gUlRMIGFuZCBoYXBwZW5zIHRvIG5vdCBoYXZlIGFueSBMVFIgdGV4dCBvbiBpdCwgb3IgdmljZSB2ZXJzYSkgdGhlIGZvbnQgZnVydGhlciBkb3duIHRoZSBzdGFjayB0aGF0IGlzbuKAmXQgdXNlZCBpcyBuZXZlciBkb3dubG9hZGVkLjwvcD4KCgoKPHA+TWFraW5nIHRoYXQgaGFwcGVuIHJlcXVpcmVzIHNlbGVjdGluZyBnb29kIG11bHRpbGluZ3VhbCBmb250cy4gR29vZCBtdWx0aWxpbmd1YWwgZm9udHMgYXJlIG9uZXMgdGhhdCBoYXZlIGdseXBocyBmb3IgYXMgbWFueSBjaGFyYWN0ZXJzIHlvdSBhbnRpY2lwYXRlIHVzaW5nIG9uIGEgcGFnZS4gQW5kIGlmIHlvdSBhcmUgdW5hYmxlIHRvIGZpbmQgb25lIHRoYXQgc3VwcG9ydHMgdGhlbSBhbGwsIHVzaW5nIG9uZSB0aGF0IHN1cHBvcnRzIG1vc3Qgb2YgdGhlbSBhbmQgdGhlbiBmYWxsaW5nIGJhY2sgdG8gYW5vdGhlciBmb250IHRoYXQgZG9lcyBpcyBhbiBlZmZpY2llbnQgd2F5IHRvIGdvLiBJZiB0aGF0IGhhcHBlbnMgdG8gYmUgdGhlIGRlZmF1bHQgc3lzdGVtIGZvbnQsIHRoYXTigJlzIGp1c3QgYXMgZ3JlYXQgYmVjYXVzZSBpdOKAmXMgb25lIGxlc3MgZG93bmxvYWRlZCBmb250IGZpbGUuPC9wPgoKCgo8aHIgY2xhc3M9IndwLWJsb2NrLXNlcGFyYXRvciIvPgoKCgo8cD5UaGUgZ29vZCB0aGluZyBhYm91dCBsZXR0aW5nIHRoZSZuYnNwO2ZvbnQtZmFtaWx5Jm5ic3A7cHJvcGVydHkgZGVjaWRlIHRoZSBmb250IGZvciBlYWNoIGdseXBoJm5ic3A7KGluc3RlYWQmbmJzcDtvZiBtYWtpbmcgZXh0cmEgQ1NTIHNlbGVjdG9ycyBmb3IgZWFjaCBkaXJlY3Rpb24pJm5ic3A7aXMgdGhhdCB0aGUgYmVoYXZpb3IgaXMgYWxyZWFkeSB0aGVyZSZuYnNwO2FzIHdlIG91dGxpbmVkIGVhcmxpZXIg4oCUJm5ic3A7d2UmbmJzcDtzaW1wbHkmbmJzcDtuZWVkIHRvIG1ha2UgdXNlIG9mIGl0LiZuYnNwOzwvcD4KPHA+VGhlIHBvc3QgPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9jb25zaWRlcmF0aW9ucy13aGVuLWNob29zaW5nLWZvbnRzLWZvci1hLW11bHRpbGluZ3VhbC13ZWJzaXRlLyI+Q29uc2lkZXJhdGlvbnMgV2hlbiBDaG9vc2luZyBGb250cyBmb3IgYSBNdWx0aWxpbmd1YWwgV2Vic2l0ZTwvYT4gYXBwZWFyZWQgZmlyc3Qgb24gPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbSI+Q1NTLVRyaWNrczwvYT4uPC9wPgpdXT48L2NvbnRlbnQ6ZW5jb2RlZD4KCQkJCQkJCTx3Znc6Y29tbWVudFJzcz5odHRwczovL2Nzcy10cmlja3MuY29tL2NvbnNpZGVyYXRpb25zLXdoZW4tY2hvb3NpbmctZm9udHMtZm9yLWEtbXVsdGlsaW5ndWFsLXdlYnNpdGUvZmVlZC88L3dmdzpjb21tZW50UnNzPgoJCTxzbGFzaDpjb21tZW50cz4xPC9zbGFzaDpjb21tZW50cz4KCQkJCQkJPHBvc3QtaWQgeG1sbnM9ImNvbS13b3JkcHJlc3M6ZmVlZC1hZGRpdGlvbnM6MSI+MzA0MjM3PC9wb3N0LWlkPgk8L2l0ZW0+CgkJPGl0ZW0+CgkJPHRpdGxlPk1ha2UgWW91cnNlbGYgYSBMaXR0bGUgQVBJIFdpdGggTmV0bGlmeSBGdW5jdGlvbnM8L3RpdGxlPgoJCTxsaW5rPmh0dHBzOi8vY3NzLXRyaWNrcy5jb20vbWFrZS15b3Vyc2VsZi1hLWxpdHRsZS1hcGktd2l0aC1uZXRsaWZ5LWZ1bmN0aW9ucy88L2xpbms+CgkJCQk8Y29tbWVudHM+aHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9tYWtlLXlvdXJzZWxmLWEtbGl0dGxlLWFwaS13aXRoLW5ldGxpZnktZnVuY3Rpb25zLyNjb21tZW50czwvY29tbWVudHM+CgkJCQk8cHViRGF0ZT5UdWUsIDEwIE1hciAyMDIwIDE0OjMzOjE5ICswMDAwPC9wdWJEYXRlPgoJCTxkYzpjcmVhdG9yPjwhW0NEQVRBW0NocmlzIENveWllcl1dPjwvZGM6Y3JlYXRvcj4KCQkJCTxjYXRlZ29yeT48IVtDREFUQVtBcnRpY2xlXV0+PC9jYXRlZ29yeT4KCQk8Y2F0ZWdvcnk+PCFbQ0RBVEFbbmV0bGlmeV1dPjwvY2F0ZWdvcnk+CgkJPGNhdGVnb3J5PjwhW0NEQVRBW25ldGxpZnkgZnVuY3Rpb25zXV0+PC9jYXRlZ29yeT4KCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwczovL2Nzcy10cmlja3MuY29tLz9wPTMwNDc5NDwvZ3VpZD4KCQkJCTxkZXNjcmlwdGlvbj48IVtDREFUQVs8cD5IZXJlJ3MgYW4gZXhhbXBsZSBvZiBhIG5pY2UgbGl0dGxlIHVzZSBjYXNlIGZvciBjbG91ZCBmdW5jdGlvbnMuIEdsaXRjaCBoYXMgdGhpcyBncmVhdCA8YSBocmVmPSJodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9mcmllbmRseS13b3JkcyI+cGFja2FnZSBvZiBmcmllbmRseSB3b3JkczwvYT4uIFNheSB5b3Ugd2FudGVkIHRvIHJhbmRvbWx5IGdlbmVyYXRlICJoYXBweS1lbGVwaGFudCIgb3IgIndhbGtpbmctdHJlZSIsIGFuZCB5b3UgbmVlZCB0byBkbyB0aGF0IG9uIHlvdXIgd2Vic2l0ZSBpbiBKYXZhU2NyaXB0LiBXZWxsLCB0aGlzIHBhY2thZ2UgaXMgcHJldHR5IGJpZyAofjIwMCBLQiksIG5lY2Vzc2FyaWx5IHNvLCBiZWNhdXNlIGl0IGhhcyA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ2xpdGNoZG90Y29tL2ZyaWVuZGx5LXdvcmRzL2Jsb2IvbWFzdGVyL3dvcmRzL3ByZWRpY2F0ZXMudHh0Ij5iaWcgZGljdGlvbmFyaWVzPC9hPiBvZiB3b3JkcyBpbiBpdC4gWW91IHdvdWxkbid0IHdhbnQgdG8gc2hpcCB0aGF0IHRvIHlvdXIgY2xpZW50LXNpZGUgSmF2YVNjcmlwdCB3aGVuIHlvdSBkb24ndCBoYXZlIHRvLjwvcD4KPHA+Q2xvdWQgZnVuY3Rpb25zIGFyZSBjb29sLCBhbmQgJiM4MjMwOyA8YSBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tL21ha2UteW91cnNlbGYtYS1saXR0bGUtYXBpLXdpdGgtbmV0bGlmeS1mdW5jdGlvbnMvIiBjbGFzcz0icmVhZC1tb3JlIj5SZWFkIGFydGljbGUgPC9hPjwvcD4KPHA+VGhlIHBvc3QgPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9tYWtlLXlvdXJzZWxmLWEtbGl0dGxlLWFwaS13aXRoLW5ldGxpZnktZnVuY3Rpb25zLyI+TWFrZSBZb3Vyc2VsZiBhIExpdHRsZSBBUEkgV2l0aCBOZXRsaWZ5IEZ1bmN0aW9uczwvYT4gYXBwZWFyZWQgZmlyc3Qgb24gPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbSI+Q1NTLVRyaWNrczwvYT4uPC9wPgpdXT48L2Rlc2NyaXB0aW9uPgoJCQkJCQkJCTxjb250ZW50OmVuY29kZWQ+PCFbQ0RBVEFbCjxwPkhlcmUncyBhbiBleGFtcGxlIG9mIGEgbmljZSBsaXR0bGUgdXNlIGNhc2UgZm9yIGNsb3VkIGZ1bmN0aW9ucy4gR2xpdGNoIGhhcyB0aGlzIGdyZWF0IDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL2ZyaWVuZGx5LXdvcmRzIj5wYWNrYWdlIG9mIGZyaWVuZGx5IHdvcmRzPC9hPi4gU2F5IHlvdSB3YW50ZWQgdG8gcmFuZG9tbHkgZ2VuZXJhdGUgImhhcHB5LWVsZXBoYW50IiBvciAid2Fsa2luZy10cmVlIiwgYW5kIHlvdSBuZWVkIHRvIGRvIHRoYXQgb24geW91ciB3ZWJzaXRlIGluIEphdmFTY3JpcHQuIFdlbGwsIHRoaXMgcGFja2FnZSBpcyBwcmV0dHkgYmlnICh+MjAwIEtCKSwgbmVjZXNzYXJpbHkgc28sIGJlY2F1c2UgaXQgaGFzIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nbGl0Y2hkb3Rjb20vZnJpZW5kbHktd29yZHMvYmxvYi9tYXN0ZXIvd29yZHMvcHJlZGljYXRlcy50eHQiPmJpZyBkaWN0aW9uYXJpZXM8L2E+IG9mIHdvcmRzIGluIGl0LiBZb3Ugd291bGRuJ3Qgd2FudCB0byBzaGlwIHRoYXQgdG8geW91ciBjbGllbnQtc2lkZSBKYXZhU2NyaXB0IHdoZW4geW91IGRvbid0IGhhdmUgdG8uPC9wPgoKCgo8cD5DbG91ZCBmdW5jdGlvbnMgYXJlIGNvb2wsIGFuZCB3ZSBjYW4gdXNlIHRoZW0gdG8gZ2l2ZSBvdXJzZWx2ZXMgYSBsaXR0bGUgQVBJIGZvciB0aGlzIHBhY2thZ2UgaW5zdGVhZC4gVGhhdCB3YXkgdGhlIHNpemUgZG9lc24ndCBtYXR0ZXIgdGhhdCBtdWNoLCBpdCdzIHVwIG9uIGEgc2VydmVyLiBOZXRsaWZ5IG1ha2VzIHRoaXMgYWJvdXQgYXMgZWFzeSBhcyBpdCBjYW4gYmUuPC9wPgoKCgo8c3BhbiBpZD0ibW9yZS0zMDQ3OTQiPjwvc3Bhbj4KCgoKPHA+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0NTUy1Ucmlja3MvYXBpLWZvci1mcmllbmRseS13b3JkcyI+SGVyZSdzIGEgcmVwbzwvYT4gdGhhdCBtYWtlcyBpdCBhbGwgcG9zc2libGUuIEl0J3MgYmFyZWx5IGFueSBjb2RlITwvcD4KCgoKPGgzPkEgPGNvZGU+ZnVuY3Rpb25zPC9jb2RlPiBmb2xkZXIgd2l0aCBhIE5vZGUgZmlsZSBpbiBpdC48L2gzPgoKCgo8cD5BdCB0aGUgcm9vdCBvZiBvdXIgcHJvamVjdDogPGNvZGU+L2Z1bmN0aW9ucy9yYW5kb20uanM8L2NvZGU+PC9wPgoKCgo8cD5UaGlzIGZpbGUgd2lsbCByZXF1aXJlIHRoZSA8Y29kZT5mcmllbmRseS13b3JkczwvY29kZT4gcGFja2FnZSBhbmQgZXhwb3J0IGEgc2luZ2xlIGZ1bmN0aW9uLiBFc3NlbnRpYWxseSBpdCBncmFicyB0d28gcmFuZG9tIHdvcmRzLCBwbG9wcyB0aGVtIHRvZ2V0aGVyLCBhbmQgcmV0dXJucyBpdC4gPC9wPgoKCgo8cHJlIHJlbD0iSmF2YVNjcmlwdCIgY2xhc3M9IndwLWJsb2NrLWNzc3RyaWNrcy1jb2RlLWJsb2NrIGxhbmd1YWdlLWphdmFzY3JpcHQiIGRhdGEtbGluZT0iIj48Y29kZSBtYXJrdXA9InR0Ij5jb25zdCBmcmllbmRseVdvcmRzID0gcmVxdWlyZSgiZnJpZW5kbHktd29yZHMiKTsKCmV4cG9ydHMuaGFuZGxlciA9IGZ1bmN0aW9uKGV2ZW50LCBjb250ZXh0LCBjYWxsYmFjaykgewogIGNvbnN0IHsgcHJlZGljYXRlcywgb2JqZWN0cyB9ID0gZnJpZW5kbHlXb3JkczsKICBjb25zdCBudW1iZXJPZlByZWRpY2F0ZXMgPSBwcmVkaWNhdGVzLmxlbmd0aDsKICBjb25zdCBudW1iZXJzT2ZPYmplY3RzID0gb2JqZWN0cy5sZW5ndGg7CgogIGNvbnN0IHJhbmRvbVByZWRpY2F0ZSA9CiAgICBwcmVkaWNhdGVzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIG51bWJlck9mUHJlZGljYXRlcyldOwogIGNvbnN0IHJhbmRvbU9iamVjdCA9IG9iamVjdHNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbnVtYmVyc09mT2JqZWN0cyldOwoKICBjb25zdCBvdXRwdXQgPSBgJHtyYW5kb21QcmVkaWNhdGV9LSR7cmFuZG9tT2JqZWN0fWA7CgogIGNhbGxiYWNrKG51bGwsIHsKICAgIGhlYWRlcnM6IHsKICAgICAgIkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbiI6ICIqIgogICAgfSwKICAgIHN0YXR1c0NvZGU6IDIwMCwKICAgIGJvZHk6IG91dHB1dAogIH0pOwp9OzwvY29kZT48L3ByZT4KCgoKPGgzPkRlcGxveSBpdCB0byBOZXRsaWZ5PC9oMz4KCgoKPHA+V2UgY2FuIGNvbmZpZ3VyZSBOZXRsaWZ5IHRvIHRlbGwgaXQgd2UgaGF2ZSB0aGlzIGZ1bmN0aW9uIGluIGEgPGNvZGU+bmV0bGlmeS50b21sPC9jb2RlPiBmaWxlIChqdXN0IHNvIHdlIGRvbid0IGV2ZW4gaGF2ZSB0byBib3RoZXIgd2l0aCB0aGUgVUkpLjwvcD4KCgoKPHByZSByZWw9Im5ldGxpZnkudG9tbCIgY2xhc3M9IndwLWJsb2NrLWNzc3RyaWNrcy1jb2RlLWJsb2NrIGxhbmd1YWdlLW5vbmUiIGRhdGEtbGluZT0iIj48Y29kZSBtYXJrdXA9InR0Ij5bYnVpbGRdCiAgY29tbWFuZCA9ICIjIgogIGZ1bmN0aW9ucyA9ICJmdW5jdGlvbnMvIjwvY29kZT48L3ByZT4KCgoKPHA+QnV0IGlmIEkgd2FudGVkIHRvIGp1c3QgdGVsbCBOZXRsaWZ5IHRoaXMgaW4gU2V0dGluZ3MsIEkgY2FuOjwvcD4KCgoKPGZpZ3VyZSBjbGFzcz0id3AtYmxvY2staW1hZ2Ugc2l6ZS1sYXJnZSI+PGltZyBzcmM9Imh0dHBzOi8vaTAud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL25ldGxpZnktZnVuY3Rpb25zLXNldHRpbmdzLnBuZz9maXQ9MTAyNCUyQzc0OCZhbXA7c3NsPTEiIGFsdD0iIiBjbGFzcz0id3AtaW1hZ2UtMzA0ODIwIiBzcmNzZXQ9Imh0dHBzOi8vaTAud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL25ldGxpZnktZnVuY3Rpb25zLXNldHRpbmdzLnBuZz93PTIzOTAmYW1wO3NzbD0xIDIzOTB3LCBodHRwczovL2kwLndwLmNvbS9jc3MtdHJpY2tzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy9uZXRsaWZ5LWZ1bmN0aW9ucy1zZXR0aW5ncy5wbmc/cmVzaXplPTMwMCUyQzIxOSZhbXA7c3NsPTEgMzAwdywgaHR0cHM6Ly9pMC53cC5jb20vY3NzLXRyaWNrcy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvbmV0bGlmeS1mdW5jdGlvbnMtc2V0dGluZ3MucG5nP3Jlc2l6ZT0xMDI0JTJDNzQ4JmFtcDtzc2w9MSAxMDI0dywgaHR0cHM6Ly9pMC53cC5jb20vY3NzLXRyaWNrcy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvbmV0bGlmeS1mdW5jdGlvbnMtc2V0dGluZ3MucG5nP3Jlc2l6ZT03NjglMkM1NjEmYW1wO3NzbD0xIDc2OHcsIGh0dHBzOi8vaTAud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL25ldGxpZnktZnVuY3Rpb25zLXNldHRpbmdzLnBuZz9yZXNpemU9MTUzNiUyQzExMjImYW1wO3NzbD0xIDE1MzZ3LCBodHRwczovL2kwLndwLmNvbS9jc3MtdHJpY2tzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy9uZXRsaWZ5LWZ1bmN0aW9ucy1zZXR0aW5ncy5wbmc/cmVzaXplPTIwNDglMkMxNDk2JmFtcDtzc2w9MSAyMDQ4dywgaHR0cHM6Ly9pMC53cC5jb20vY3NzLXRyaWNrcy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvbmV0bGlmeS1mdW5jdGlvbnMtc2V0dGluZ3MucG5nP3Jlc2l6ZT0xMDAwJTJDNzMxJmFtcDtzc2w9MSAxMDAwdyIgc2l6ZXM9IihtaW4td2lkdGg6IDczNXB4KSA4NjRweCwgOTZ2dyIgLz48L2ZpZ3VyZT4KCgoKPHA+T25jZSBpdCdzIGRlcGxveWVkLCBJIGdhdmUgaXQgYSBuaWNlIHNpdGUgbmFtZSwgYW5kIHRoZW4gdGhhdCBjbG91ZCBmdW5jdGlvbiB3aWxsIGJlIGF2YWlsYWJsZSBhdCBhIFVSTC4gWW91IGNhbiBldmVuIHNlZSBpdCBpbiB0aGUgYnJvd3Nlcjo8L3A+CgoKCjxwPjxhIGhyZWY9Imh0dHBzOi8vZnJpZW5kbHktd29yZHMubmV0bGlmeS5jb20vLm5ldGxpZnkvZnVuY3Rpb25zL3JhbmRvbSI+aHR0cHM6Ly9mcmllbmRseS13b3Jkcy5uZXRsaWZ5LmNvbS8ubmV0bGlmeS9mdW5jdGlvbnMvcmFuZG9tPC9hPjwvcD4KCgoKPHA+Tm93IEkgZG9uJ3QgaGF2ZSB0byBzaGlwIHRoYXQgcGFja2FnZSBpbiBteSBjbGllbnQtc2lkZSBKYXZhU2NyaXB0IOKAlCBJIGNhbiBqdXN0IGhpdCB0aGlzIFVSTCB0byBnZXQgd2hhdCBJIHdhbnQuIDwvcD4KCgoKPGg0PkNPUlM8L2g0PgoKCgo8cD5JZiBJIHdhcyBoaXR0aW5nIHRoaXMgVVJMIGZyb20gbXkgb3duIHdlYnNpdGUgYWxzbyBhdCA8Y29kZT5mcmllbmRseS13b3Jkcy5uZXRsaWZ5LmNvbTwvY29kZT4gSSB3b3VsZG4ndCBoYXZlIHRvIHdvcnJ5IGFib3V0IENPUlMsIGJ1dCBpZiBJIG5lZWQgdG8gdXNlIGl0IGZyb20gYW55IG90aGVyIHdlYnNpdGUsIEkgZG8uIE5vdGljZSB0aGUgPGNvZGU+QWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luPC9jb2RlPiBzdHVmZiBpbiB0aGUgTm9kZSBKYXZhU2NyaXB0IGFib3ZlLiBUaGF0IHRha2VzIGNhcmUgb2YgdGhhdC48L3A+CgoKCjxoMz5EZW1vPC9oMz4KCgoKPHA+VG8gdXNlIG91ciBsaXR0bGUgQVBJLCB3ZSBjYW4gPGNvZGU+ZmV0Y2g8L2NvZGU+IGZyb20gaXQuIFRoYXQncyBpdCEgPC9wPgoKCgo8ZGl2IGNsYXNzPSJ3cC1ibG9jay1jcC1jb2RlcGVuLWd1dGVuYmVyZy1lbWJlZC1ibG9jayBjcF9lbWJlZF93cmFwcGVyIj48aWZyYW1lIGlkPSJjcF9lbWJlZF9CYU5teGdqIiBzcmM9Ii8vY29kZXBlbi5pby9hbm9uL2VtYmVkL0JhTm14Z2o/aGVpZ2h0PTU1MCZhbXA7dGhlbWUtaWQ9MSZhbXA7c2x1Zy1oYXNoPUJhTm14Z2omYW1wO2RlZmF1bHQtdGFiPWpzLHJlc3VsdCIgaGVpZ2h0PSI1NTAiIHNjcm9sbGluZz0ibm8iIGZyYW1lYm9yZGVyPSIwIiBhbGxvd2Z1bGxzY3JlZW4gYWxsb3dwYXltZW50cmVxdWVzdCBuYW1lPSJDb2RlUGVuIEVtYmVkIEJhTm14Z2oiIHRpdGxlPSJDb2RlUGVuIEVtYmVkIEJhTm14Z2oiIGNsYXNzPSJjcF9lbWJlZF9pZnJhbWUiIHN0eWxlPSJ3aWR0aDoxMDAlO292ZXJmbG93OmhpZGRlbiI+Q29kZVBlbiBFbWJlZCBGYWxsYmFjazwvaWZyYW1lPjwvZGl2PgoKCgo8aHIgY2xhc3M9IndwLWJsb2NrLXNlcGFyYXRvciIvPgoKCgo8cD5Eb2VzIHRoaXMgcGlxdWUgeW91ciBpbnRlcmVzdD8gPGEgaHJlZj0iaHR0cHM6Ly9mdW5jdGlvbnMubmV0bGlmeS5jb20vZXhhbXBsZXMvIj5OZXRsaWZ5IGhhcyBhIHRvbiBvZiBleGFtcGxlczwvYT4gb2YgdXNpbmcgZnVuY3Rpb25zLiA8L3A+CgoKCjxociBjbGFzcz0id3AtYmxvY2stc2VwYXJhdG9yIi8+CgoKCjxwPldoaWxlIEkgd2FzIGRvaW5nIHRoaXMgSSBjYW1lIGFjcm9zcyA8YSBocmVmPSJodHRwczovL3BhdWwua2lubGFuLm1lL2ZyaWVuZGx5LXByb2plY3QtbmFtZS1nZW5lcmF0b3Itd2l0aC16ZWl0LyI+UGF1bCBLaW5sYW4ncyBhcnRpY2xlPC9hPiB0aGF0IGRvZXMgcHJldHR5IG11Y2ggZXhhY3RseSB0aGUgc2FtZSB0aGluZywgYnV0IGhpcyBoYXMgc29tZSBleHRyYSBmdW5jdGlvbmFsaXR5IGFzIHBhcnQgb2YgdGhlIEFQSSB5b3UgbWlnaHQgd2FubmEgY2hlY2sgb3V0LiA8L3A+CjxwPlRoZSBwb3N0IDxhIHJlbD0ibm9mb2xsb3ciIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20vbWFrZS15b3Vyc2VsZi1hLWxpdHRsZS1hcGktd2l0aC1uZXRsaWZ5LWZ1bmN0aW9ucy8iPk1ha2UgWW91cnNlbGYgYSBMaXR0bGUgQVBJIFdpdGggTmV0bGlmeSBGdW5jdGlvbnM8L2E+IGFwcGVhcmVkIGZpcnN0IG9uIDxhIHJlbD0ibm9mb2xsb3ciIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20iPkNTUy1Ucmlja3M8L2E+LjwvcD4KXV0+PC9jb250ZW50OmVuY29kZWQ+CgkJCQkJCQk8d2Z3OmNvbW1lbnRSc3M+aHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9tYWtlLXlvdXJzZWxmLWEtbGl0dGxlLWFwaS13aXRoLW5ldGxpZnktZnVuY3Rpb25zL2ZlZWQvPC93Znc6Y29tbWVudFJzcz4KCQk8c2xhc2g6Y29tbWVudHM+Mjwvc2xhc2g6Y29tbWVudHM+CgkJCQkJCTxwb3N0LWlkIHhtbG5zPSJjb20td29yZHByZXNzOmZlZWQtYWRkaXRpb25zOjEiPjMwNDc5NDwvcG9zdC1pZD4JPC9pdGVtPgoJCTxpdGVtPgoJCTx0aXRsZT5OZWdhdGl2ZSBNYXJnaW5zPC90aXRsZT4KCQk8bGluaz5odHRwczovL3d3dy5xdWlya3Ntb2RlLm9yZy9ibG9nL2FyY2hpdmVzLzIwMjAvMDIvbmVnYXRpdmVfbWFyZ2luLmh0bWw8L2xpbms+CgkJCQk8Y29tbWVudHM+aHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9uZWdhdGl2ZS1tYXJnaW5zLyNjb21tZW50czwvY29tbWVudHM+CgkJCQk8cHViRGF0ZT5Nb24sIDA5IE1hciAyMDIwIDIwOjQzOjI0ICswMDAwPC9wdWJEYXRlPgoJCTxkYzpjcmVhdG9yPjwhW0NEQVRBW0NocmlzIENveWllcl1dPjwvZGM6Y3JlYXRvcj4KCQkJCTxjYXRlZ29yeT48IVtDREFUQVtMaW5rXV0+PC9jYXRlZ29yeT4KCQk8Y2F0ZWdvcnk+PCFbQ0RBVEFbbWFyZ2luXV0+PC9jYXRlZ29yeT4KCQk8Y2F0ZWdvcnk+PCFbQ0RBVEFbbmVnYXRpdmUgbWFyZ2luXV0+PC9jYXRlZ29yeT4KCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwczovL2Nzcy10cmlja3MuY29tLz9wPTMwNDU4NDwvZ3VpZD4KCQkJCTxkZXNjcmlwdGlvbj48IVtDREFUQVs8cD5QUEsgPGEgaHJlZj0iaHR0cHM6Ly93d3cucXVpcmtzbW9kZS5vcmcvYmxvZy9hcmNoaXZlcy8yMDIwLzAyL25lZ2F0aXZlX21hcmdpbi5odG1sIj5kaWdzIGludG8gdGhlIHN1YmplY3Q8L2E+LCB3aGljaCBoZSBmb3VuZCB3b2VmdWxseSB1bmRlcmNvdmVyZWQgaW4gd2ViIHRlY2ggZG9jdW1lbnRhdGlvbi4gPGEgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9hbG1hbmFjL3Byb3BlcnRpZXMvbS9tYXJnaW4vIj5PdXIgZW50cnk8L2E+IGRvZXNuJ3QgbWVudGlvbiB0aGVtIGF0IGFsbCwgd2hpY2ggSSdsbCBhaW0gdG8gZml4LiA8L3A+CjxwPkFncmVlIG9uIHRoaXMgc2l0dWF0aW9uOjwvcD4KPGJsb2NrcXVvdGUgY2xhc3M9IndwLWJsb2NrLXF1b3RlIj4KPHA+VGhpcyBpcyBieSBmYXIgdGhlIG1vc3QgY29tbW9uIHVzZSBjYXNlIGZvciBuZWdhdGl2ZSBtYXJnaW5zLiBZb3UgZ2l2ZSBhIGNvbnRhaW5lciBhIHBhZGRpbmcgc28gdGhhdCBpdHMgY29udGVudHMgaGF2ZSBzb21lIGJyZWF0aGluZyBzcGFjZS4gSG93ZXZlciwgeW91IHdhbnQgdGhlIGhlYWRlciB0byBzcGFuIHRoZSBlbnRpcmUgY29udGFpbmVyLCBpZ25vcmluZyB0aGUgcGFkZGluZy4gTmVnYXRpdmUgbWFyZ2lucyBhcmUgdGhlIHdheSB0byBnby48L3A+CjwvYmxvY2txdW90ZT4KPHA+TGlrZSB0aGlzOjwvcD4KPHA+Q29kZVBlbiYjODIzMDsgPGEgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9uZWdhdGl2ZS1tYXJnaW5zLyIgY2xhc3M9InJlYWQtbW9yZSI+UmVhZCBhcnRpY2xlIDwvYT48L3A+CjxwPlRoZSBwb3N0IDxhIHJlbD0ibm9mb2xsb3ciIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20vbmVnYXRpdmUtbWFyZ2lucy8iPk5lZ2F0aXZlIE1hcmdpbnM8L2E+IGFwcGVhcmVkIGZpcnN0IG9uIDxhIHJlbD0ibm9mb2xsb3ciIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20iPkNTUy1Ucmlja3M8L2E+LjwvcD4KXV0+PC9kZXNjcmlwdGlvbj4KCQkJCQkJCQk8Y29udGVudDplbmNvZGVkPjwhW0NEQVRBWwo8cD5QUEsgPGEgaHJlZj0iaHR0cHM6Ly93d3cucXVpcmtzbW9kZS5vcmcvYmxvZy9hcmNoaXZlcy8yMDIwLzAyL25lZ2F0aXZlX21hcmdpbi5odG1sIj5kaWdzIGludG8gdGhlIHN1YmplY3Q8L2E+LCB3aGljaCBoZSBmb3VuZCB3b2VmdWxseSB1bmRlcmNvdmVyZWQgaW4gd2ViIHRlY2ggZG9jdW1lbnRhdGlvbi4gPGEgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9hbG1hbmFjL3Byb3BlcnRpZXMvbS9tYXJnaW4vIj5PdXIgZW50cnk8L2E+IGRvZXNuJ3QgbWVudGlvbiB0aGVtIGF0IGFsbCwgd2hpY2ggSSdsbCBhaW0gdG8gZml4LiA8L3A+CgoKCjxwPkFncmVlIG9uIHRoaXMgc2l0dWF0aW9uOjwvcD4KCgoKPGJsb2NrcXVvdGUgY2xhc3M9IndwLWJsb2NrLXF1b3RlIj48cD5UaGlzIGlzIGJ5IGZhciB0aGUgbW9zdCBjb21tb24gdXNlIGNhc2UgZm9yIG5lZ2F0aXZlIG1hcmdpbnMuIFlvdSBnaXZlIGEgY29udGFpbmVyIGEgcGFkZGluZyBzbyB0aGF0IGl0cyBjb250ZW50cyBoYXZlIHNvbWUgYnJlYXRoaW5nIHNwYWNlLiBIb3dldmVyLCB5b3Ugd2FudCB0aGUgaGVhZGVyIHRvIHNwYW4gdGhlIGVudGlyZSBjb250YWluZXIsIGlnbm9yaW5nIHRoZSBwYWRkaW5nLiBOZWdhdGl2ZSBtYXJnaW5zIGFyZSB0aGUgd2F5IHRvIGdvLjwvcD48L2Jsb2NrcXVvdGU+CgoKCjxzcGFuIGlkPSJtb3JlLTMwNDU4NCI+PC9zcGFuPgoKCgo8cD5MaWtlIHRoaXM6PC9wPgoKCgo8ZGl2IGNsYXNzPSJ3cC1ibG9jay1jcC1jb2RlcGVuLWd1dGVuYmVyZy1lbWJlZC1ibG9jayBjcF9lbWJlZF93cmFwcGVyIj48aWZyYW1lIGlkPSJjcF9lbWJlZF9HUkp2RVZWIiBzcmM9Ii8vY29kZXBlbi5pby9hbm9uL2VtYmVkL0dSSnZFVlY/aGVpZ2h0PTU1MCZhbXA7dGhlbWUtaWQ9MSZhbXA7c2x1Zy1oYXNoPUdSSnZFVlYmYW1wO2RlZmF1bHQtdGFiPWNzcyxyZXN1bHQiIGhlaWdodD0iNTUwIiBzY3JvbGxpbmc9Im5vIiBmcmFtZWJvcmRlcj0iMCIgYWxsb3dmdWxsc2NyZWVuIGFsbG93cGF5bWVudHJlcXVlc3QgbmFtZT0iQ29kZVBlbiBFbWJlZCBHUkp2RVZWIiB0aXRsZT0iQ29kZVBlbiBFbWJlZCBHUkp2RVZWIiBjbGFzcz0iY3BfZW1iZWRfaWZyYW1lIiBzdHlsZT0id2lkdGg6MTAwJTtvdmVyZmxvdzpoaWRkZW4iPkNvZGVQZW4gRW1iZWQgRmFsbGJhY2s8L2lmcmFtZT48L2Rpdj4KCgoKPHA+QW5lY2RvdGFsbHksIEkgZmluZCBuZWdhdGl2ZSBtYXJnaW5zIGZhaXJseSBpbnR1aXRpdmUuIEFsdGhvdWdoIHRoYXQncyBzdXJwcmlzaW5nIHNpbmNlIHRoZXJlIGFyZSBzbyBtYW55IG9kZGl0aWVzLCBsaWtlIGhvdyB0aGV5IHNvbWV0aW1lcyBhZmZlY3QgdGhlIGVsZW1lbnQgYXBwbGllZCB0byBpdHNlbGYgKGUuZy4gbW92ZSBpdHNlbGYgdG8gdGhlIGxlZnQpIGFuZCBzb21ldGltZXMgYWZmZWN0IG90aGVyIGVsZW1lbnRzIChlLmcuIG1vdmUgb3RoZXIgZWxlbWVudHMgdXB3YXJkKSDigJQgcGx1cyB0aGUgZmFjdCB0aGF0IGl0IGFmZmVjdHMgPGEgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS93aGF0LXlvdS1zaG91bGQta25vdy1hYm91dC1jb2xsYXBzaW5nLW1hcmdpbnMvIj5tYXJnaW4gY29sbGFwc2luZzwvYT4gd2hpY2ggaXMgd2VpcmQgYW55d2F5LiA8L3A+CgoKCjxwPkl0IHdvdWxkIHByb2JhYmx5IGJlIHNtYXJ0IHRvIGRvIHRoaXMgZGlyZWN0aW9uYWwgbWFyZ2luIHN0dWZmIDxhIGhyZWY9Imh0dHBzOi8vY29kZXBlbi5pby9jaHJpc2NveWllci9wZW4vV052RUVaaiI+d2l0aCBsb2dpY2FsIHByb3BlcnRpZXM8L2E+IHRvby48L3A+CjxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnF1aXJrc21vZGUub3JnL2Jsb2cvYXJjaGl2ZXMvMjAyMC8wMi9uZWdhdGl2ZV9tYXJnaW4uaHRtbCIgdGl0bGU9IkRpcmVjdCBsaW5rIHRvIGZlYXR1cmVkIGFydGljbGUiPkRpcmVjdCBMaW5rIHRvIEFydGljbGU8L2E+ICYjODIxMjsgPGEgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9uZWdhdGl2ZS1tYXJnaW5zLyI+UGVybWFsaW5rPC9hPjwvcD48cD5UaGUgcG9zdCA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tL25lZ2F0aXZlLW1hcmdpbnMvIj5OZWdhdGl2ZSBNYXJnaW5zPC9hPiBhcHBlYXJlZCBmaXJzdCBvbiA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tIj5DU1MtVHJpY2tzPC9hPi48L3A+Cl1dPjwvY29udGVudDplbmNvZGVkPgoJCQkJCQkJPHdmdzpjb21tZW50UnNzPmh0dHBzOi8vY3NzLXRyaWNrcy5jb20vbmVnYXRpdmUtbWFyZ2lucy9mZWVkLzwvd2Z3OmNvbW1lbnRSc3M+CgkJPHNsYXNoOmNvbW1lbnRzPjI8L3NsYXNoOmNvbW1lbnRzPgoJCQkJCQk8cG9zdC1pZCB4bWxucz0iY29tLXdvcmRwcmVzczpmZWVkLWFkZGl0aW9uczoxIj4zMDQ1ODQ8L3Bvc3QtaWQ+CTwvaXRlbT4KCQk8aXRlbT4KCQk8dGl0bGU+SSBQcmVzc2VkIOKMmEIuIFlvdSBXb3VsZG7igJl0IEJlbGlldmUgV2hhdCBIYXBwZW5lZCBOZXh0PC90aXRsZT4KCQk8bGluaz5odHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWtWRC1zanRGb0VJPC9saW5rPgoJCQkJPGNvbW1lbnRzPmh0dHBzOi8vY3NzLXRyaWNrcy5jb20vaS1wcmVzc2VkLSVlMiU4YyU5OGIteW91LXdvdWxkbnQtYmVsaWV2ZS13aGF0LWhhcHBlbmVkLW5leHQvI3Jlc3BvbmQ8L2NvbW1lbnRzPgoJCQkJPHB1YkRhdGU+TW9uLCAwOSBNYXIgMjAyMCAyMDo0MzoxMSArMDAwMDwvcHViRGF0ZT4KCQk8ZGM6Y3JlYXRvcj48IVtDREFUQVtSb2JpbiBSZW5kbGVdXT48L2RjOmNyZWF0b3I+CgkJCQk8Y2F0ZWdvcnk+PCFbQ0RBVEFbTGlua11dPjwvY2F0ZWdvcnk+CgkJPGNhdGVnb3J5PjwhW0NEQVRBW2ZpZ21hXV0+PC9jYXRlZ29yeT4KCQk8Y2F0ZWdvcnk+PCFbQ0RBVEFbdHlwb2dyYXBoeV1dPjwvY2F0ZWdvcnk+CgoJCTxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS8/cD0zMDQ3NzA8L2d1aWQ+CgkJCQk8ZGVzY3JpcHRpb24+PCFbQ0RBVEFbPHA+VGhpcyB0YWxrIGJ5IE1hcmNpbiBXaWNoYXJ5IGlzIOKAlCBiZXlvbmQgYm90aCBlbnRodXNpYXN0aWMgYW5kIG91dHN0YW5kaW5nIOKAlCBhbGwgYWJvdXQgdGhlIGNvbXBsZXhpdHkgb2YgVUkgZGVzaWduLCB0eXBvZ3JhcGh5LCBhbmQgdGhlIGxlbmd0aHMgaGlzIHRlYW0gYXQgRmlnbWEgaGFzIGdvbmUgdG8gbWFrZSBzdXJlIHRoYXQgZG9pbmcgc29tZXRoaW5nIGFzIHNpbXBsZSBhcyBzZWxlY3RpbmcgYSBmb250IGZyb20gYSBkcm9wZG93biBkb2VzIHdoYXQgeW91IGV4cGVjdCBpdCB0by4gPC9wPgo8cD5J4oCZZCByZWNvbW1lbmQgdGhpcyB0YWxrIGV2ZW4gaWYgZm9udHMgYW5kIHR5cG9ncmFwaHkgZG9u4oCZdCBoYXBwZW4gdG8gYmUgeW91ciBjdXAgb2YgdGVhIGJlY2F1c2UgTWFyY2lu4oCZcyBzdG9yaWVzIGFib3V0IHNvZnR3YXJlIGRldmVsb3BtZW50IGFyZSBhbHdheXMgZmFzY2luYXRpbmcuPC9wPgo8cD48YSBocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWtWRC1zanRGb0VJIiB0aXRsZT0iRGlyZWN0IGxpbmsgdG8gZmVhdHVyZWQgYXJ0aWNsZSI+RGlyZWN0IExpbmsgdG8gPC9hPiYjODIzMDsgPGEgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9pLXByZXNzZWQtJWUyJThjJTk4Yi15b3Utd291bGRudC1iZWxpZXZlLXdoYXQtaGFwcGVuZWQtbmV4dC8iIGNsYXNzPSJyZWFkLW1vcmUiPlJlYWQgYXJ0aWNsZSA8L2E+PC9wPgo8cD5UaGUgcG9zdCA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tL2ktcHJlc3NlZC0lZTIlOGMlOThiLXlvdS13b3VsZG50LWJlbGlldmUtd2hhdC1oYXBwZW5lZC1uZXh0LyI+SSBQcmVzc2VkIOKMmEIuIFlvdSBXb3VsZG7igJl0IEJlbGlldmUgV2hhdCBIYXBwZW5lZCBOZXh0PC9hPiBhcHBlYXJlZCBmaXJzdCBvbiA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tIj5DU1MtVHJpY2tzPC9hPi48L3A+Cl1dPjwvZGVzY3JpcHRpb24+CgkJCQkJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVsKPHA+VGhpcyB0YWxrIGJ5IE1hcmNpbiBXaWNoYXJ5IGlzIOKAlCBiZXlvbmQgYm90aCBlbnRodXNpYXN0aWMgYW5kIG91dHN0YW5kaW5nIOKAlCBhbGwgYWJvdXQgdGhlIGNvbXBsZXhpdHkgb2YgVUkgZGVzaWduLCB0eXBvZ3JhcGh5LCBhbmQgdGhlIGxlbmd0aHMgaGlzIHRlYW0gYXQgRmlnbWEgaGFzIGdvbmUgdG8gbWFrZSBzdXJlIHRoYXQgZG9pbmcgc29tZXRoaW5nIGFzIHNpbXBsZSBhcyBzZWxlY3RpbmcgYSBmb250IGZyb20gYSBkcm9wZG93biBkb2VzIHdoYXQgeW91IGV4cGVjdCBpdCB0by4gPC9wPgoKCgo8c3BhbiBpZD0ibW9yZS0zMDQ3NzAiPjwvc3Bhbj4KCgoKPHA+SeKAmWQgcmVjb21tZW5kIHRoaXMgdGFsayBldmVuIGlmIGZvbnRzIGFuZCB0eXBvZ3JhcGh5IGRvbuKAmXQgaGFwcGVuIHRvIGJlIHlvdXIgY3VwIG9mIHRlYSBiZWNhdXNlIE1hcmNpbuKAmXMgc3RvcmllcyBhYm91dCBzb2Z0d2FyZSBkZXZlbG9wbWVudCBhcmUgYWx3YXlzIGZhc2NpbmF0aW5nLjwvcD4KCgoKPGZpZ3VyZSBjbGFzcz0id3AtYmxvY2stZW1iZWQteW91dHViZSB3cC1ibG9jay1lbWJlZCBpcy10eXBlLXZpZGVvIGlzLXByb3ZpZGVyLXlvdXR1YmUgd3AtZW1iZWQtYXNwZWN0LTE2LTkgd3AtaGFzLWFzcGVjdC1yYXRpbyI+PGRpdiBjbGFzcz0id3AtYmxvY2stZW1iZWRfX3dyYXBwZXIiPgo8aWZyYW1lIHRpdGxlPSJJIFByZXNzZWQg4oyYQi4gWW91IFdvdWxkbiYjMDM5O3QgQmVsaWV2ZSBXaGF0IEhhcHBlbmVkIE5leHQgLSBNYXJjaW4gV2ljaGFyeSwgRmlnbWEgKENvbmZpZykiIHdpZHRoPSI1MDAiIGhlaWdodD0iMjgxIiBzcmM9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL2tWRC1zanRGb0VJP2ZlYXR1cmU9b2VtYmVkIiBmcmFtZWJvcmRlcj0iMCIgYWxsb3c9ImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+CjwvZGl2PjwvZmlndXJlPgo8cD48YSBocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWtWRC1zanRGb0VJIiB0aXRsZT0iRGlyZWN0IGxpbmsgdG8gZmVhdHVyZWQgYXJ0aWNsZSI+RGlyZWN0IExpbmsgdG8gQXJ0aWNsZTwvYT4gJiM4MjEyOyA8YSBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tL2ktcHJlc3NlZC0lZTIlOGMlOThiLXlvdS13b3VsZG50LWJlbGlldmUtd2hhdC1oYXBwZW5lZC1uZXh0LyI+UGVybWFsaW5rPC9hPjwvcD48cD5UaGUgcG9zdCA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tL2ktcHJlc3NlZC0lZTIlOGMlOThiLXlvdS13b3VsZG50LWJlbGlldmUtd2hhdC1oYXBwZW5lZC1uZXh0LyI+SSBQcmVzc2VkIOKMmEIuIFlvdSBXb3VsZG7igJl0IEJlbGlldmUgV2hhdCBIYXBwZW5lZCBOZXh0PC9hPiBhcHBlYXJlZCBmaXJzdCBvbiA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tIj5DU1MtVHJpY2tzPC9hPi48L3A+Cl1dPjwvY29udGVudDplbmNvZGVkPgoJCQkJCQkJPHdmdzpjb21tZW50UnNzPmh0dHBzOi8vY3NzLXRyaWNrcy5jb20vaS1wcmVzc2VkLSVlMiU4YyU5OGIteW91LXdvdWxkbnQtYmVsaWV2ZS13aGF0LWhhcHBlbmVkLW5leHQvZmVlZC88L3dmdzpjb21tZW50UnNzPgoJCTxzbGFzaDpjb21tZW50cz4wPC9zbGFzaDpjb21tZW50cz4KCQkJCQkJPHBvc3QtaWQgeG1sbnM9ImNvbS13b3JkcHJlc3M6ZmVlZC1hZGRpdGlvbnM6MSI+MzA0NzcwPC9wb3N0LWlkPgk8L2l0ZW0+CgkJPGl0ZW0+CgkJPHRpdGxlPkFkdmVudHVyZXMgaW4gQ1NTIFNlbWktVHJhbnNwYXJlbmN5IExhbmQ8L3RpdGxlPgoJCTxsaW5rPmh0dHBzOi8vY3NzLXRyaWNrcy5jb20vYWR2ZW50dXJlcy1pbi1jc3Mtc2VtaS10cmFuc3BhcmVuY3ktbGFuZC88L2xpbms+CgkJCQk8Y29tbWVudHM+aHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9hZHZlbnR1cmVzLWluLWNzcy1zZW1pLXRyYW5zcGFyZW5jeS1sYW5kLyNjb21tZW50czwvY29tbWVudHM+CgkJCQk8cHViRGF0ZT5Nb24sIDA5IE1hciAyMDIwIDE0OjA1OjEwICswMDAwPC9wdWJEYXRlPgoJCTxkYzpjcmVhdG9yPjwhW0NEQVRBW0FuYSBUdWRvcl1dPjwvZGM6Y3JlYXRvcj4KCQkJCTxjYXRlZ29yeT48IVtDREFUQVtBcnRpY2xlXV0+PC9jYXRlZ29yeT4KCQk8Y2F0ZWdvcnk+PCFbQ0RBVEFbdHJhbnNwYXJlbmN5XV0+PC9jYXRlZ29yeT4KCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwczovL2Nzcy10cmlja3MuY29tLz9wPTI5NTU3NDwvZ3VpZD4KCQkJCTxkZXNjcmlwdGlvbj48IVtDREFUQVs8cD5SZWNlbnRseSwgSSB3YXMgYXNrZWQgdG8gbWFrZSBzb21lIHR3ZWFrcyB0byBhIGxhbmRpbmcgcGFnZSBhbmQsIGFtb25nIHRoZSB0aGluZ3MgSSBmb3VuZCBpbiB0aGUgY29kZSwgdGhlcmUgd2VyZSB0d28gc2VtaXRyYW5zcGFyZW50IG92ZXJsYXlzIOKAlCBib3RoIHdpdGggdGhlIHNhbWUgUkdCIHZhbHVlcyBmb3IgdGhlIDxjb2RlPmJhY2tncm91bmQtY29sb3I8L2NvZGU+IOKAlCBvbiB0b3Agb2YgYW4gaW1hZ2UuIFNvbWV0aGluZyBsaWtlIHRoaXM6PC9wPgo8cHJlIHJlbD0iSFRNTCI+PGNvZGUgY2xhc3M9Imxhbmd1YWdlLW1hcmt1cCI+JiM2MDtpbWcgc3JjPSdteUltYWdlLmpwZycvJiM2MjsNCiYjNjA7ZGl2IGNsYXNzPSdvdmVyMScmIzYyOyYjNjA7L2RpdiYjNjI7DQomIzYwO2RpdiBjbGFzcz0nb3ZlcjInJiM2MjsmIzYwOy9kaXYmIzYyOzwvY29kZT48L3ByZT4KPHA+VGhlcmUgd2FzIG5vIHB1cnBvc2UgdG8gaGF2aW5nIHR3byBvZiB0aGVtIG90aGVyIHRoYW4gdGhlIGZhY3QgdGhhdCBoYXZpbmcganVzdCBvbmUgZGlkbid0IHRpbnQgdGhlIGltYWdlIGVub3VnaC4gRm9yIHNvbWUgcmVhc29uLCB3aG9ldmVyIGluaXRpYWxseSBjb2RlZCB0aGF0ICYjODIzMDsgPGEgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9hZHZlbnR1cmVzLWluLWNzcy1zZW1pLXRyYW5zcGFyZW5jeS1sYW5kLyIgY2xhc3M9InJlYWQtbW9yZSI+UmVhZCBhcnRpY2xlIDwvYT48L3A+CjxwPlRoZSBwb3N0IDxhIHJlbD0ibm9mb2xsb3ciIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20vYWR2ZW50dXJlcy1pbi1jc3Mtc2VtaS10cmFuc3BhcmVuY3ktbGFuZC8iPkFkdmVudHVyZXMgaW4gQ1NTIFNlbWktVHJhbnNwYXJlbmN5IExhbmQ8L2E+IGFwcGVhcmVkIGZpcnN0IG9uIDxhIHJlbD0ibm9mb2xsb3ciIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20iPkNTUy1Ucmlja3M8L2E+LjwvcD4KXV0+PC9kZXNjcmlwdGlvbj4KCQkJCQkJCQk8Y29udGVudDplbmNvZGVkPjwhW0NEQVRBWzxwPlJlY2VudGx5LCBJIHdhcyBhc2tlZCB0byBtYWtlIHNvbWUgdHdlYWtzIHRvIGEgbGFuZGluZyBwYWdlIGFuZCwgYW1vbmcgdGhlIHRoaW5ncyBJIGZvdW5kIGluIHRoZSBjb2RlLCB0aGVyZSB3ZXJlIHR3byBzZW1pdHJhbnNwYXJlbnQgb3ZlcmxheXMg4oCUIGJvdGggd2l0aCB0aGUgc2FtZSBSR0IgdmFsdWVzIGZvciB0aGUgPGNvZGU+YmFja2dyb3VuZC1jb2xvcjwvY29kZT4g4oCUIG9uIHRvcCBvZiBhbiBpbWFnZS4gU29tZXRoaW5nIGxpa2UgdGhpczo8L3A+CjxwcmUgcmVsPSJIVE1MIj48Y29kZSBjbGFzcz0ibGFuZ3VhZ2UtbWFya3VwIj4mbHQ7aW1nIHNyYz0nbXlJbWFnZS5qcGcnLyZndDsNCiZsdDtkaXYgY2xhc3M9J292ZXIxJyZndDsmbHQ7L2RpdiZndDsNCiZsdDtkaXYgY2xhc3M9J292ZXIyJyZndDsmbHQ7L2RpdiZndDs8L2NvZGU+PC9wcmU+CjxwPlRoZXJlIHdhcyBubyBwdXJwb3NlIHRvIGhhdmluZyB0d28gb2YgdGhlbSBvdGhlciB0aGFuIHRoZSBmYWN0IHRoYXQgaGF2aW5nIGp1c3Qgb25lIGRpZG4ndCB0aW50IHRoZSBpbWFnZSBlbm91Z2guIEZvciBzb21lIHJlYXNvbiwgd2hvZXZlciBpbml0aWFsbHkgY29kZWQgdGhhdCBwYWdlIHRob3VnaHQgdGhhdCBhZGRpbmcgYW5vdGhlciBzZW1pdHJhbnNwYXJlbnQgb3ZlcmxheSB3YXMgYSBiZXR0ZXIgaWRlYSB0aGFuIGluY3JlYXNpbmcgdGhlIDxjb2RlPm9wYWNpdHk8L2NvZGU+IG9mIHRoZSBmaXJzdC48L3A+CjxwPlNvLCBJIGRlY2lkZWQgdG8gZGl0Y2ggYSBsYXllciBhbmQgZ2l2ZSB0aGUgcmVtYWluaW5nIG9uZSBhbiA8Y29kZT5vcGFjaXR5PC9jb2RlPiB2YWx1ZSB0aGF0IHdvdWxkIGdpdmUgYSB2aXN1YWwgcmVzdWx0IGVxdWl2YWxlbnQgdG8gdGhlIGluaXRpYWwgb25lLCBnaXZlbiBieSB1c2luZyB0d28gbGF5ZXJzLiBBbHJpZ2h0LCBidXQgaG93IGRvIHdlIGdldCB0aGUgPGNvZGU+b3BhY2l0eTwvY29kZT4gb2YgdGhlIG9uZSBsYXllciBlcXVpdmFsZW50PzwvcD4KPHA+PHNwYW4gaWQ9Im1vcmUtMjk1NTc0Ij48L3NwYW4+PC9wPgo8cD5JZiB5b3UgcmVtZW1iZXIgbXkgPGEgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9tYXNrLWNvbXBvc2l0aW5nLXRoZS1jcmFzaC1jb3Vyc2UvIj5jcmFzaCBjb3Vyc2UgaW4gPGNvZGU+bWFzazwvY29kZT4gY29tcG9zaXRpbmc8L2E+LCB0aGVuIHlvdSBtYXkgaGF2ZSBndWVzc2VkIHRoZSBhbnN3ZXIgYmVjYXVzZSBpdCdzIHRoZSBleGFjdCBzYW1lIGZvcm11bGEgdGhhdCB3ZSBhbHNvIHVzZSBmb3IgdGhlIDxjb2RlPmFkZDwvY29kZT4gY29tcG9zaXRpbmcgb3BlcmF0aW9uISBHaXZlbiB0d28gbGF5ZXJzIHdpdGggYWxwaGFzIDxjb2RlPmEwPC9jb2RlPiBhbmQgPGNvZGU+YTE8L2NvZGU+LCB0aGUgcmVzdWx0aW5nIGFscGhhIGlzOjwvcD4KPHByZT48Y29kZT5hMCArIGExIC0gYTDii4VhMTwvY29kZT48L3ByZT4KPHA+VGhlIGludGVyYWN0aXZlIGRlbW8gYmVsb3cgc2hvd3MgYSBjb21wYXJhdGl2ZSBsb29rIGF0IGEgdHdvLWxheWVyIG92ZXJsYXkgd2l0aCBhbHBoYXMgPGNvZGU+YTA8L2NvZGU+IGFuZCA8Y29kZT5hMTwvY29kZT4gKHdoaWNoIHlvdSBjYW4gY29udHJvbCB2aWEgdGhlIHJhbmdlIGlucHV0cykgdmVyc3VzIGEgb25lIGxheWVyIG92ZXJsYXkgd2l0aCBhbiBhbHBoYSBvZiA8Y29kZT5hMCArIGExIC0gYTDii4VhMTwvY29kZT4uPC9wPgo8cCBkYXRhLWhlaWdodD0iNTg1IiBzdHlsZT0iaGVpZ2h0OiA1ODVweDsgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrOyBtYXJnaW46IDFyZW0gMDsgcGFkZGluZzogMXJlbTsgb3ZlcmZsb3c6IGF1dG87IiBkYXRhLXRoZW1lLWlkPSIxIiBkYXRhLXNsdWctaGFzaD0iYWJvSmJKSyIgZGF0YS1kZWZhdWx0LXRhYj0icmVzdWx0IiBkYXRhLXVzZXI9InRoZWJhYnlkaW5vIiBkYXRhLWVtYmVkLXZlcnNpb249IjIiIGRhdGEtcGVuLXRpdGxlPSJPbmUgbGF5ZXIgZXF1aXZhbGVudCBvZiB0d28gc2VtaS10cmFuc3BhcmVudCBsYXllcnMgKHNlZSBkZXNjcmlwdGlvbikiIGNsYXNzPSJjb2RlcGVuIj5TZWUgdGhlIDxhIGhyZWY9Imh0dHA6Ly9jb2RlcGVuLmlvL3RoZWJhYnlkaW5vL3Blbi9hYm9KYkpLLyI+UGVuPC9hPiBieSB0aGViYWJ5ZGlubyAoPGEgaHJlZj0iaHR0cDovL2NvZGVwZW4uaW8vdGhlYmFieWRpbm8iPkB0aGViYWJ5ZGlubzwvYT4pIG9uIDxhIGhyZWY9Imh0dHA6Ly9jb2RlcGVuLmlvIj5Db2RlUGVuPC9hPi48L3A+CjxwPkZ1bm55IGVub3VnaCwgdGhleSBsb29rIGlkZW50aWNhbCBpZiB3ZSByZW1vdmUgdGhlIGltYWdlICh2aWEgdGhlIGNoZWNrYm94IGF0IHRoZSBib3R0b20gb2YgdGhlIGRlbW8pLCBidXQgc2VlbSBhIGJpdCBkaWZmZXJlbnQgd2l0aCB0aGUgaW1hZ2UgdW5kZXJuZWF0aC4gUGVyaGFwcyB0aGUgZGlmZmVyZW5jZSBpcyBqdXN0IG15IGV5ZXMgcGxheWluZyB0cmlja3Mgb24gbWUgZ2l2ZW4gdGhlIGltYWdlIGlzIGxpZ2h0ZXIgaW4gc29tZSBwYXJ0cyBhbmQgZGFya2VyIGluIG90aGVycy4gPC9wPgo8cD5JdCBkZWZpbml0ZWx5IGRvZXNuJ3QgbG9vayBkaWZmZXJlbnQgaWYgd2UgZG9uJ3QgaGF2ZSB0aGVtIHNpZGUgYnkgc2lkZSBhbmQgd2UganVzdCBzd2l0Y2ggYmV0d2VlbiB0aGUgdHdvIGxheWVycyBvZiBhbHBoYXMgPGNvZGU+YTA8L2NvZGU+IGFuZCA8Y29kZT5hMTwvY29kZT4gYW5kIHRoZSBvbmUgbGF5ZXIgb2YgYWxwaGEgPGNvZGU+YTAgKyBhMSAtIGEw4ouFYTE8L2NvZGU+LjwvcD4KPHAgZGF0YS1oZWlnaHQ9IjU4NSIgc3R5bGU9ImhlaWdodDogNTg1cHg7IGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBib3JkZXI6IDJweCBzb2xpZCBibGFjazsgbWFyZ2luOiAxcmVtIDA7IHBhZGRpbmc6IDFyZW07IG92ZXJmbG93OiBhdXRvOyIgZGF0YS10aGVtZS1pZD0iMSIgZGF0YS1zbHVnLWhhc2g9IlFXYnlWUXYiIGRhdGEtZGVmYXVsdC10YWI9InJlc3VsdCIgZGF0YS11c2VyPSJ0aGViYWJ5ZGlubyIgZGF0YS1lbWJlZC12ZXJzaW9uPSIyIiBkYXRhLXBlbi10aXRsZT0iMiBsYXllcnMgdnMuIDEgbGF5ZXIgb3ZlcmxheSBlcXVpdmFsZW50IiBjbGFzcz0iY29kZXBlbiI+U2VlIHRoZSA8YSBocmVmPSJodHRwOi8vY29kZXBlbi5pby90aGViYWJ5ZGluby9wZW4vUVdieVZRdi8iPlBlbjwvYT4gYnkgdGhlYmFieWRpbm8gKDxhIGhyZWY9Imh0dHA6Ly9jb2RlcGVuLmlvL3RoZWJhYnlkaW5vIj5AdGhlYmFieWRpbm88L2E+KSBvbiA8YSBocmVmPSJodHRwOi8vY29kZXBlbi5pbyI+Q29kZVBlbjwvYT4uPC9wPgo8cD5UaGlzIGNhbiBiZSBleHRlbmRlZCB0byBtdWx0aXBsZSBsYXllcnMuIEluIHRoaXMgY2FzZSwgd2UgY29tcHV0ZSB0aGUgZXF1aXZhbGVudCBsYXllciBvZiB0aGUgYm90dG9tIHR3byBsYXllcnMsIHRoZW4gdGhlIGVxdWl2YWxlbnQgbGF5ZXIgb2YgdGhpcyByZXN1bHQgYW5kIHRoZSBsYXllciByaWdodCBvbiB0b3Agb2YgaXQsIGFuZCBzbyBvbjo8L3A+CjxmaWd1cmU+CjxpbWcgc3JjPSJodHRwczovL2kyLndwLmNvbS9jc3MtdHJpY2tzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi9sYXllcl9hbHBoYV9lcXVpdmFsZW50cy5wbmc/c3NsPTEiIGFsdD0iRGlhZ3JhbS4gSWxsdXN0cmF0ZXMgaG93IGEgYnVuY2ggb2Ygc2VtaXRyYW5zcGFyZW50IGxheWVycyBvZiB2YXJpb3VzIGFscGhhcyBhcmUgcmVkdWNlZCB0byBhIHNpbmdsZSBvbmUuIFdlIHN0YXJ0IGJ5IHRha2luZyB0aGUgZmlyc3QgdHdvIGZyb20gdGhlIGJvdHRvbSBhbmQgY29tcHV0aW5nIHRoZWlyIGVxdWl2YWxlbnQsIHRoZW4gd2UgdGFrZSB0aGlzIHJlc3VsdCBhbmQgdGhlIHRoaXJkIGxheWVyIGZyb20gdGhlIGJvdHRvbSBhbmQgY29tYmluZSB0aGVtIGludG8gYSBzaW5nbGUgbGF5ZXIgYW5kIHNvIG9uLiIgZGF0YS1yZWNhbGMtZGltcz0iMSI+PGZpZ2NhcHRpb24+UmVkdWNpbmcgbXVsdGlwbGUgc2VtaXRyYW5zcGFyZW50IGxheWVycyB0byBhIHNpbmdsZSBvbmUuPC9maWdjYXB0aW9uPjwvZmlndXJlPgo8cD5QbGF5aW5nIHdpdGggdGhpcyBoYXMgYWxzbyBtYWRlIG1lIHdvbmRlciBhYm91dCB0aGUgc29saWQgPGNvZGU+YmFja2dyb3VuZDwvY29kZT4gZXF1aXZhbGVudCBvZiBhIHNvbGlkIGxheWVyICg8Y29kZT5jMDwvY29kZT4pIHdpdGggYSBzZW1pdHJhbnNwYXJlbnQgb3ZlcmxheSAoPGNvZGU+YzE8L2NvZGU+IHdpdGggYW4gYWxwaGEgb2YgPGNvZGU+YTwvY29kZT4pIG9uIHRvcC4gSW4gdGhpcyBjYXNlLCB0aGUgPGNvZGU+YmFja2dyb3VuZDwvY29kZT4gb2YgdGhlIG9uZSBsYXllciBlcXVpdmFsZW50IGlzIGNvbXB1dGVkIG9uIGEgcGVyIGNoYW5uZWwgYmFzaXMsIHdpdGggdGhlIHJlc3VsdGluZyBjaGFubmVscyBiZWluZzo8L3A+CjxwcmU+PGNvZGU+Y2gwICsgKGNoMSAtIGNoMCkqYTwvY29kZT48L3ByZT4KPHA+Li4ud2hlcmUgPGNvZGU+Y2gwPC9jb2RlPiBpcyBhIGNoYW5uZWwgKDxjb2RlPnJlZDwvY29kZT4sIDxjb2RlPmdyZWVuPC9jb2RlPiBvciA8Y29kZT5ibHVlPC9jb2RlPikgb2YgdGhlIHNvbGlkIGJvdHRvbSBsYXllciwgPGNvZGU+Y2gxPC9jb2RlPiB0aGUgY29ycmVzcG9uZGluZyBjaGFubmVsIG9mIHRoZSB0b3Agc2VtaXRyYW5zcGFyZW50IGxheWVyLCBhbmQgPGNvZGU+YTwvY29kZT4gdGhlIGFscGhhIG9mIHRoZSBzYW1lIHRvcCBzZW1pdHJhbnNwYXJlbnQgbGF5ZXIuPC9wPgo8cD5QdXR0aW5nIHRoaXMgaW50byBTYXNzIGNvZGUsIHdlIGhhdmU6PC9wPgo8cHJlIHJlbD0iU0NTUyI+PGNvZGUgY2xhc3M9Imxhbmd1YWdlLXNjc3MiPi8qIHBlciBjaGFubmVsIGZ1bmN0aW9uICovDQpAZnVuY3Rpb24gcmVzLWNoKCRjaDAsICRjaDEsICRhKSB7DQogIEByZXR1cm4gJGNoMCArICgkY2gxIC0gJGNoMCkqJGENCn0NCg0KQGZ1bmN0aW9uIHJlcy1jb2woJGMwLCAkYzEsICRhKSB7DQogICRjaDogJ3JlZCcgJ2dyZWVuJyAnYmx1ZSc7IC8qIGNoYW5uZWwgbmFtZXMgKi8NCiAgJG5jOiBsZW5ndGgoJGNoKTsgLyogbnVtYmVyIG9mIGNoYW5uZWxzICovDQogICRjaC1saXN0OiAoKTsNCg0KICBAZm9yICRpIGZyb20gMCB0byAkbmMgew0KICAgICRmbjogbnRoKCRjaCwgJGkgKyAxKTsNCiAgICAkY2gtbGlzdDogJGNoLWxpc3QsIA0KICAgICAgcmVzLWNoKGNhbGwoJGZuLCAkYzApLCBjYWxsKCRmbiwgJGMxKSwgJGEpOw0KICB9DQoNCiAgQHJldHVybiBSR0IoJGNoLWxpc3QpDQp9PC9jb2RlPjwvcHJlPgo8cD5UaGUgaW50ZXJhY3RpdmUgZGVtbyBiZWxvdyAod2hpY2ggbGV0cyB1cyBwaWNrIHRoZSA8YWJicj5SR0I8L2FiYnI+IHZhbHVlcyBvZiB0aGUgdHdvIGxheWVycyBhcyB3ZWxsIGFzIHRoZSBhbHBoYSBvZiB0aGUgdG9wIG9uZSBieSBjbGlja2luZyB0aGUgc3dhdGNoZXMgYW5kIHRoZSBhbHBoYSB2YWx1ZSwgcmVzcGVjdGl2ZWx5KSBzaG93cyBhIGNvbXBhcmF0aXZlIGxvb2sgYXQgdGhlIHR3byBsYXllciB2ZXJzdXMgb3VyIGNvbXB1dGVkIG9uZSBsYXllciBlcXVpdmFsZW50LjwvcD4KPHAgZGF0YS1oZWlnaHQ9IjcwMCIgc3R5bGU9ImhlaWdodDogNzAwcHg7IGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBib3JkZXI6IDJweCBzb2xpZCBibGFjazsgbWFyZ2luOiAxcmVtIDA7IHBhZGRpbmc6IDFyZW07IG92ZXJmbG93OiBhdXRvOyIgZGF0YS10aGVtZS1pZD0iMSIgZGF0YS1zbHVnLWhhc2g9InJOVmV4cGQiIGRhdGEtZGVmYXVsdC10YWI9InJlc3VsdCIgZGF0YS11c2VyPSJ0aGViYWJ5ZGlubyIgZGF0YS1lbWJlZC12ZXJzaW9uPSIyIiBkYXRhLXBlbi10aXRsZT0iMSBsYXllciBlcXVpdmFsZW50IG9mIHNvbGlkIGxheWVyICsgc2VtaXRyYW5zcGFyZW50IG92ZXJsYXkiIGNsYXNzPSJjb2RlcGVuIj5TZWUgdGhlIDxhIGhyZWY9Imh0dHA6Ly9jb2RlcGVuLmlvL3RoZWJhYnlkaW5vL3Blbi9yTlZleHBkLyI+UGVuPC9hPiBieSB0aGViYWJ5ZGlubyAoPGEgaHJlZj0iaHR0cDovL2NvZGVwZW4uaW8vdGhlYmFieWRpbm8iPkB0aGViYWJ5ZGlubzwvYT4pIG9uIDxhIGhyZWY9Imh0dHA6Ly9jb2RlcGVuLmlvIj5Db2RlUGVuPC9hPi48L3A+CjxwPkRlcGVuZGluZyBvbiB0aGUgZGV2aWNlLCBvcGVyYXRpbmcgc3lzdGVtIGFuZCBicm93c2VyLCB5b3UgbWF5IHNlZSB0aGUgdHdvIHBhbmVscyBpbiB0aGUgZGVtbyBhYm92ZSBoYXZlIGlkZW50aWNhbCBiYWNrZ3JvdW5kcy4uLiBvciBub3QuIFRoZSBmb3JtdWxhIGlzIGNvcnJlY3QsIGJ1dCBob3cgZGlmZmVyZW50IGJyb3dzZXJzIG9uIGRpZmZlcmVudCBvcGVyYXRpbmcgc3lzdGVtcyBhbmQgZGV2aWNlcyBkZWFsIHdpdGggdGhlIHR3byBsYXllciBjYXNlIG1heSB2YXJ5LjwvcD4KPGZpZ3VyZT4KPGltZyBzcmM9Imh0dHBzOi8vaTIud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyL3BhbmVsc19jb2xsLnBuZz9zc2w9MSIgYWx0PSJTY3JlZW5zaG90IGNvbGxhZ2UuIiBkYXRhLXJlY2FsYy1kaW1zPSIxIi8+PGZpZ2NhcHRpb24+RXhwZWN0ZWQgcmVzdWx0IHdpdGggcGFuZWxzIGJlaW5nIGlkZW50aWNhbCBvbiB0aGUgbGVmdCB2cy4gdGhlIHNsaWdodGx5IGRpZmZlcmVudCByZXN1bHQgd2UgbWF5IHNvbWV0aW1lcyBnZXQgYmV0d2VlbiB0aGUgdHdvIGxheWVyIHNjZW5hcmlvICh0b3AgcmlnaHQpIGFuZCB0aGUgb25lIGxheWVyIHNjZW5hcmlvIChib3R0b20gcmlnaHQpLjwvZmlnY2FwdGlvbj48L2ZpZ3VyZT4KPHA+SSBhc2tlZCBmb3Igc2NyZWVuc2hvdHMgb2YgYSBzaW1wbGlmaWVkIDxhIGhyZWY9Imh0dHBzOi8vY29kZXBlbi5pby90aGViYWJ5ZGluby9wZW4vZVlPdk14ciI+dGVzdCBjYXNlPC9hPiBvbiBUd2l0dGVyIGFuZCwgZnJvbSB0aGUgcmVwbGllcyB0aGF0IEkgZ290LCB0aGUgdHdvIHBhbmVscyBhbHdheXMgc2VlbSB0byBsb29rIHRoZSBzYW1lIG9uIG1vYmlsZSBicm93c2VycywgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHdlJ3JlIHRhbGtpbmcgYWJvdXQgQW5kcm9pZCBvciBpT1MgZGV2aWNlcyBhcyB3ZWxsIGFzIEZpcmVmb3gsIHJlZ2FyZGxlc3Mgb2YgdGhlIG9wZXJhdGluZyBzeXN0ZW0uIFRoZXkgYWxzbyBzZWVtIHRvIGFsbW9zdCBhbHdheXMgYmUgaWRlbnRpY2FsIG9uIFdpbmRvd3MsIHRob3VnaCBJIGRpZCByZWNlaXZlIGEgcmVwbHkgbGV0dGluZyBtZSBrbm93IGJvdGggQ2hyb21lIGFuZCBDaHJvbWl1bSBFZGdlIG1heSBzb21ldGltZXMgc2hvdyB0aGUgdHdvIHBhbmVscyBkaWZmZXJlbnRseS48L3A+CjxwPldoZW4gaXQgY29tZXMgdG8gV2ViS2l0IGJyb3dzZXJzIG9uIG1hY09TIGFuZCBMaW51eCwgcmVzdWx0cyBhcmUgdmVyeSBtdWNoIG1peGVkLCB3aXRoIHRoZSBwYW5lbHMgc2xpZ2h0bHkgZGlmZmVyZW50IGluIG1vc3QgY2FzZXMuIFRoYXQgc2FpZCwgc3dpdGNoaW5nIHRvIGEgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9zbWZyL3N0YXR1cy8xMjI5MzA3OTA4MTcwNDUyOTkyIj5zUkdCIHByb2ZpbGU8L2E+IGNvdWxkIG1ha2UgdGhlbSBpZGVudGljYWwuIFRoZSBmdW5uaWVzdCB0aGluZyBoZXJlIGlzLCB3aGVuIHVzaW5nIGEgdHdvIG1vbml0b3Igc2V0dXAsIGRyYWdnaW5nIHRoZSB3aW5kb3cgZnJvbSBvbmUgbW9uaXRvciB0byB0aGUgb3RoZXIgY2FuIG1ha2UgdGhlIGRpZmZlcmVuY2Ugd2hldGhlciB0aGUgdHdvIHBhbmVscyBhcHBlYXIgb3IgZGlzYXBwZWFyLjwvcD4KPHA+SG93ZXZlciwgaW4gYSByZWFsIHVzZSBjYXNlIHNjZW5hcmlvLCB0aGUgZGlmZmVyZW5jZSBpcyBwcmV0dHkgc21hbGwgYW5kIHdlJ3JlIG5ldmVyIGdvaW5nIHRvIGhhdmUgdGhlIHR3byBwYW5lbHMgc2lkZS1ieS1zaWRlLiBFdmVuIGlmIHRoZXJlJ3MgYSBkaWZmZXJlbmNlLCBub2JvZHkgaXMgZ29pbmcgdG8ga25vdyBhYm91dCBpdCB1bmxlc3MgdGhleSB0ZXN0IHRoZSBwYWdlIGluIGRpZmZlcmVudCBzY2VuYXJpb3MsIHdoaWNoIGlzIHNvbWV0aGluZyBwcm9iYWJseSBvbmx5IGEgd2ViIGRldmVsb3BlciB3b3VsZCBkbyBhbnl3YXkuIEFuZCBpdCdzIG5vdCBsaWtlIHdlIGRvbid0IGFsc28gaGF2ZSBkaWZmZXJlbmNlcyBiZXR3ZWVuIGhvdyB0aGUgc2FtZSBwbGFpbiBvbGQgc29saWQgYmFja2dyb3VuZHMgbG9vayBvbiBkaWZmZXJlbnQgZGV2aWNlcywgb3BlcmF0aW5nIHN5c3RlbXMgYW5kIGJyb3dzZXJzLiBGb3IgZXhhbXBsZSwgPGNvZGU+I2ZmYTgwMDwvY29kZT4sIHdoaWNoIGdldHMgdXNlZCBhIGxvdCBoZXJlIG9uIENTUy1Ucmlja3MsIGRvZXNuJ3QgbG9vayB0aGUgc2FtZSBvbiBteSBVYnVudHUgYW5kIFdpbmRvd3MgbGFwdG9wcy4gVGhlIHNhbWUgY2FuIGJlIHNhaWQgYWJvdXQgdGhlIHdheSBwZW9wbGUncyBleWVzIG1heSBwZXJjZWl2ZSB0aGluZ3MgZGlmZmVyZW50bHkuPC9wPgo8cD5UaGUgcG9zdCA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tL2FkdmVudHVyZXMtaW4tY3NzLXNlbWktdHJhbnNwYXJlbmN5LWxhbmQvIj5BZHZlbnR1cmVzIGluIENTUyBTZW1pLVRyYW5zcGFyZW5jeSBMYW5kPC9hPiBhcHBlYXJlZCBmaXJzdCBvbiA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tIj5DU1MtVHJpY2tzPC9hPi48L3A+Cl1dPjwvY29udGVudDplbmNvZGVkPgoJCQkJCQkJPHdmdzpjb21tZW50UnNzPmh0dHBzOi8vY3NzLXRyaWNrcy5jb20vYWR2ZW50dXJlcy1pbi1jc3Mtc2VtaS10cmFuc3BhcmVuY3ktbGFuZC9mZWVkLzwvd2Z3OmNvbW1lbnRSc3M+CgkJPHNsYXNoOmNvbW1lbnRzPjE8L3NsYXNoOmNvbW1lbnRzPgoJCQkJCQk8cG9zdC1pZCB4bWxucz0iY29tLXdvcmRwcmVzczpmZWVkLWFkZGl0aW9uczoxIj4yOTU1NzQ8L3Bvc3QtaWQ+CTwvaXRlbT4KCQk8aXRlbT4KCQk8dGl0bGU+VXNlIGE6dmlzaXRlZCBpbiB5b3VyIENTUyBzdHlsZXNoZWV0PC90aXRsZT4KCQk8bGluaz5odHRwczovL2V2ZXJ0cG90LmNvbS92aXNpdGVkLWxpbmtzLzwvbGluaz4KCQkJCTxwdWJEYXRlPk1vbiwgMDkgTWFyIDIwMjAgMTQ6MDQ6NTQgKzAwMDA8L3B1YkRhdGU+CgkJPGRjOmNyZWF0b3I+PCFbQ0RBVEFbQ2hyaXMgQ295aWVyXV0+PC9kYzpjcmVhdG9yPgoJCQkJPGNhdGVnb3J5PjwhW0NEQVRBW0xpbmtdXT48L2NhdGVnb3J5PgoJCTxjYXRlZ29yeT48IVtDREFUQVtsaW5rc11dPjwvY2F0ZWdvcnk+CgoJCTxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS8/cD0zMDQ3Mjg8L2d1aWQ+CgkJCQk8ZGVzY3JpcHRpb24+PCFbQ0RBVEFbPHA+RXZlcnQgUG90OjwvcD4KPGJsb2NrcXVvdGUgY2xhc3M9IndwLWJsb2NrLXF1b3RlIj4KPHA+VW5mb3J0dW5hdGVseSwgd2hlbiBzZXR0aW5nIGEgbmV3IGNvbG9yIChlLmcuIDxjb2RlPmEgeyBjb2xvcjogIzQ0RiB9PC9jb2RlPikgdGhlIOKAmHB1cnBsZSB2aXNpdGVkIGxpbmvigJkgZmVhdHVyZSBhbHNvIGdldHMgZGlzYWJsZWQuIEkgdGhpbmsgdGhpcyBpcyBhIHNoYW1lLCBhcyB0aGVyZeKAmXMgc28gbWFueSBpbnN0YW5jZXMgd2hlcmUgeW914oCZcmUgZ29pbmcgdGhyb3VnaCBhIGxpc3Qgb2YgbGlua3MgYW5kIHdhbnQgdG8gc2VlIHdoYXQgeW914oCZdmUgc2VlbiBiZWZvcmUuPC9wPgo8cD5UaGUgMiBleGFtcGxlcyBJIHJhbiBpbnRvIHRvZGF5IHdlcmU6PC9wPgo8cD7igKIgQVdTIENsb3Vkd2F0Y2ggTG9nczxiciAvPuKAoiBTdGFja292ZXJmbG93IHNlYXJjaCByZXN1bHRzPC9wPgo8L2Jsb2NrcXVvdGU+CjxwPkkgbGlrZSB0aG9zZSB1c2UgY2FzZXMuIE15IHRha2UgaXMgdGhhdCA8Y29kZT46dmlzaXRlZDwvY29kZT4gaXMgcGVyaGFwcyBhIGJpdCAmIzgyMzA7IDxhIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20vdXNlLWF2aXNpdGVkLWluLXlvdXItY3NzLXN0eWxlc2hlZXQvIiBjbGFzcz0icmVhZC1tb3JlIj5SZWFkIGFydGljbGUgPC9hPjwvcD4KPHA+VGhlIHBvc3QgPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS91c2UtYXZpc2l0ZWQtaW4teW91ci1jc3Mtc3R5bGVzaGVldC8iPlVzZSBhOnZpc2l0ZWQgaW4geW91ciBDU1Mgc3R5bGVzaGVldDwvYT4gYXBwZWFyZWQgZmlyc3Qgb24gPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbSI+Q1NTLVRyaWNrczwvYT4uPC9wPgpdXT48L2Rlc2NyaXB0aW9uPgoJCQkJCQkJCTxjb250ZW50OmVuY29kZWQ+PCFbQ0RBVEFbCjxwPkV2ZXJ0IFBvdDo8L3A+CgoKCjxibG9ja3F1b3RlIGNsYXNzPSJ3cC1ibG9jay1xdW90ZSI+PHA+VW5mb3J0dW5hdGVseSwgd2hlbiBzZXR0aW5nIGEgbmV3IGNvbG9yIChlLmcuIDxjb2RlPmEgeyBjb2xvcjogIzQ0RiB9PC9jb2RlPikgdGhlIOKAmHB1cnBsZSB2aXNpdGVkIGxpbmvigJkgZmVhdHVyZSBhbHNvIGdldHMgZGlzYWJsZWQuIEkgdGhpbmsgdGhpcyBpcyBhIHNoYW1lLCBhcyB0aGVyZeKAmXMgc28gbWFueSBpbnN0YW5jZXMgd2hlcmUgeW914oCZcmUgZ29pbmcgdGhyb3VnaCBhIGxpc3Qgb2YgbGlua3MgYW5kIHdhbnQgdG8gc2VlIHdoYXQgeW914oCZdmUgc2VlbiBiZWZvcmUuPC9wPjxwPlRoZSAyIGV4YW1wbGVzIEkgcmFuIGludG8gdG9kYXkgd2VyZTo8YnI+PGJyPuKAoiBBV1MgQ2xvdWR3YXRjaCBMb2dzPGJyPuKAoiBTdGFja292ZXJmbG93IHNlYXJjaCByZXN1bHRzPC9wPjwvYmxvY2txdW90ZT4KCgoKPHA+SSBsaWtlIHRob3NlIHVzZSBjYXNlcy4gTXkgdGFrZSBpcyB0aGF0IDxjb2RlPjp2aXNpdGVkPC9jb2RlPiBpcyBwZXJoYXBzIGEgYml0IHVuZGVyLXVzZWQgaW4gZ2VuZXJhbCwgYnV0IG5vdCBieSBtdWNoLiBJdCdzIHVzZWZ1bCBpbiB0aGF0IHNpdHVhdGlvbiB3aGVyZSBhIHVzZXIgbWlnaHQgd29uZGVyOiA8ZW0+aG1tbW0sIGhhdmUgSSBzZWVuIHRoaXMgb25lIHlldD88L2VtPiA8L3A+CgoKCjxwPkknbSBub3QgcGFydGljdWxhcmx5IGNvbXBlbGxlZCB0byB1c2UgaXQgb24gdGhpcyBzaXRlIOKAlCBhcyBJJ20gbm90IGNvbnZpbmNlZCBpdCBtYXR0ZXJzIGZvciB0aGUgVVggaWYgeW91J3ZlIHZpc2l0ZWQgYW55IHBhcnRpY3VsYXIgbGluaywgcGFydGljdWxhcmx5IG5vdCBpbiBhIGJsb2ctbGlrZSBzZXR0aW5nIGFzIGhlcmUuPC9wPgo8cD48YSBocmVmPSJodHRwczovL2V2ZXJ0cG90LmNvbS92aXNpdGVkLWxpbmtzLyIgdGl0bGU9IkRpcmVjdCBsaW5rIHRvIGZlYXR1cmVkIGFydGljbGUiPkRpcmVjdCBMaW5rIHRvIEFydGljbGU8L2E+ICYjODIxMjsgPGEgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS91c2UtYXZpc2l0ZWQtaW4teW91ci1jc3Mtc3R5bGVzaGVldC8iPlBlcm1hbGluazwvYT48L3A+PHA+VGhlIHBvc3QgPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS91c2UtYXZpc2l0ZWQtaW4teW91ci1jc3Mtc3R5bGVzaGVldC8iPlVzZSBhOnZpc2l0ZWQgaW4geW91ciBDU1Mgc3R5bGVzaGVldDwvYT4gYXBwZWFyZWQgZmlyc3Qgb24gPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbSI+Q1NTLVRyaWNrczwvYT4uPC9wPgpdXT48L2NvbnRlbnQ6ZW5jb2RlZD4KCQkJCQkJCQkJPHBvc3QtaWQgeG1sbnM9ImNvbS13b3JkcHJlc3M6ZmVlZC1hZGRpdGlvbnM6MSI+MzA0NzI4PC9wb3N0LWlkPgk8L2l0ZW0+CgkJPGl0ZW0+CgkJPHRpdGxlPkdlb2ZmJiM4MjE3O3MgUmVkZXNpZ24gUG9zdHM8L3RpdGxlPgoJCTxsaW5rPmh0dHBzOi8vY3NzLXRyaWNrcy5jb20vZ2VvZmZzLXJlZGVzaWduLXBvc3RzLzwvbGluaz4KCQkJCTxjb21tZW50cz5odHRwczovL2Nzcy10cmlja3MuY29tL2dlb2Zmcy1yZWRlc2lnbi1wb3N0cy8jcmVzcG9uZDwvY29tbWVudHM+CgkJCQk8cHViRGF0ZT5TdW4sIDA4IE1hciAyMDIwIDIzOjI5OjI1ICswMDAwPC9wdWJEYXRlPgoJCTxkYzpjcmVhdG9yPjwhW0NEQVRBW0NocmlzIENveWllcl1dPjwvZGM6Y3JlYXRvcj4KCQkJCTxjYXRlZ29yeT48IVtDREFUQVtBcnRpY2xlXV0+PC9jYXRlZ29yeT4KCgkJPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwczovL2Nzcy10cmlja3MuY29tLz9wPTMwNDgwNjwvZ3VpZD4KCQkJCTxkZXNjcmlwdGlvbj48IVtDREFUQVs8cD5JIGxvdmUgaXQgd2hlbiBwZW9wbGUgcmVkZXNpZ24gImluIHRoZSBvcGVuIiBhbmQgd3JpdGUgYWJvdXQgaXQuIEknZCBqdXN0IGxpa2UgdG8gc2hvdXQgb3V0IHRvIG91ciBvd24gPGEgaHJlZj0iaHR0cHM6Ly9nZW9mZmdyYWhhbS5tZS8iPkdlb2ZmPC9hPiB3aG8gaGFzIGJlZW4gZG9pbmcgdGhpcyBmb3IgMyBtb250aHMgbm93LiBIZSA8YSBocmVmPSJodHRwczovL2dlb2ZmZ3JhaGFtLm1lL3dlYnNpdGUtcmVkZXNpZ24taXRzLWZpbmFsbHktaGFwcGVuaW5nLyI+c3RhcnRlZDwvYT4gaW4gbGF0ZSBEZWNlbWJlciBsYXN0IHllYXIuIEhlJ3MgYmVlbiBzaGFyaW5nIHN0dWZmIGxpa2UgaGlzIDxhIGhyZWY9Imh0dHBzOi8vZ2VvZmZncmFoYW0ubWUvd2Vic2l0ZS1yZWRlc2lnbi1zZXR0aW5nLXVwLW15LWRldmVsb3BtZW50LWVudmlyb25tZW50LyI+ZGV2IHRvb2xpbmcgY2hvaWNlczwvYT4sIGNvbnNpZGVyaW5nIDxhIGhyZWY9Imh0dHBzOi8vZ2VvZmZncmFoYW0ubWUvd2Vic2l0ZS1yZWRlc2lnbi1wZXJmb3JtYW5jZS1hdWRpdC8iPnBlcmZvcm1hbmNlPC9hPiwgY29uc2lkZXJpbmcgPGEgaHJlZj0iaHR0cHM6Ly9nZW9mZmdyYWhhbS5tZS93ZWJzaXRlLXJlZGVzaWduLWFjY2Vzc2liaWxpdHktYXVkaXQvIj5hY2Nlc3NpYmlsaXR5PC9hPiwgdGhhdCBtb21lbnQgd2hlcmUgeW91IDxhIGhyZWY9Imh0dHBzOi8vZ2VvZmZncmFoYW0ubWUvd2Vic2l0ZS1yZWRlc2lnbi10aGUtaGFuZ292ZXIvIj5xdWVzdGlvbiBldmVyeXRoaW5nPC9hPiwgYW5kIHRoZW4gZ2V0dGluZyBiYWNrIG9uIHdpdGggaXQgYnkgZXZvbHZpbmcgY2hvaWNlcywgbGlrZSBob3cgaGUncyA8YSBocmVmPSJodHRwczovL2dlb2ZmZ3JhaGFtLm1lL3dlYnNpdGUtcmVkZXNpZ24tcmUtdGhpbmtpbmctZGFyay1tb2RlLyI+aGFuZGxlZCBkYXJrIG1vZGU8L2E+LiA8L3A+CjxwPkdyZWF0ICYjODIzMDsgPGEgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9nZW9mZnMtcmVkZXNpZ24tcG9zdHMvIiBjbGFzcz0icmVhZC1tb3JlIj5SZWFkIGFydGljbGUgPC9hPjwvcD4KPHA+VGhlIHBvc3QgPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9nZW9mZnMtcmVkZXNpZ24tcG9zdHMvIj5HZW9mZiYjODIxNztzIFJlZGVzaWduIFBvc3RzPC9hPiBhcHBlYXJlZCBmaXJzdCBvbiA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tIj5DU1MtVHJpY2tzPC9hPi48L3A+Cl1dPjwvZGVzY3JpcHRpb24+CgkJCQkJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVsKPHA+SSBsb3ZlIGl0IHdoZW4gcGVvcGxlIHJlZGVzaWduICJpbiB0aGUgb3BlbiIgYW5kIHdyaXRlIGFib3V0IGl0LiBJJ2QganVzdCBsaWtlIHRvIHNob3V0IG91dCB0byBvdXIgb3duIDxhIGhyZWY9Imh0dHBzOi8vZ2VvZmZncmFoYW0ubWUvIj5HZW9mZjwvYT4gd2hvIGhhcyBiZWVuIGRvaW5nIHRoaXMgZm9yIDMgbW9udGhzIG5vdy4gSGUgPGEgaHJlZj0iaHR0cHM6Ly9nZW9mZmdyYWhhbS5tZS93ZWJzaXRlLXJlZGVzaWduLWl0cy1maW5hbGx5LWhhcHBlbmluZy8iPnN0YXJ0ZWQ8L2E+IGluIGxhdGUgRGVjZW1iZXIgbGFzdCB5ZWFyLiBIZSdzIGJlZW4gc2hhcmluZyBzdHVmZiBsaWtlIGhpcyA8YSBocmVmPSJodHRwczovL2dlb2ZmZ3JhaGFtLm1lL3dlYnNpdGUtcmVkZXNpZ24tc2V0dGluZy11cC1teS1kZXZlbG9wbWVudC1lbnZpcm9ubWVudC8iPmRldiB0b29saW5nIGNob2ljZXM8L2E+LCBjb25zaWRlcmluZyA8YSBocmVmPSJodHRwczovL2dlb2ZmZ3JhaGFtLm1lL3dlYnNpdGUtcmVkZXNpZ24tcGVyZm9ybWFuY2UtYXVkaXQvIj5wZXJmb3JtYW5jZTwvYT4sIGNvbnNpZGVyaW5nIDxhIGhyZWY9Imh0dHBzOi8vZ2VvZmZncmFoYW0ubWUvd2Vic2l0ZS1yZWRlc2lnbi1hY2Nlc3NpYmlsaXR5LWF1ZGl0LyI+YWNjZXNzaWJpbGl0eTwvYT4sIHRoYXQgbW9tZW50IHdoZXJlIHlvdSA8YSBocmVmPSJodHRwczovL2dlb2ZmZ3JhaGFtLm1lL3dlYnNpdGUtcmVkZXNpZ24tdGhlLWhhbmdvdmVyLyI+cXVlc3Rpb24gZXZlcnl0aGluZzwvYT4sIGFuZCB0aGVuIGdldHRpbmcgYmFjayBvbiB3aXRoIGl0IGJ5IGV2b2x2aW5nIGNob2ljZXMsIGxpa2UgaG93IGhlJ3MgPGEgaHJlZj0iaHR0cHM6Ly9nZW9mZmdyYWhhbS5tZS93ZWJzaXRlLXJlZGVzaWduLXJlLXRoaW5raW5nLWRhcmstbW9kZS8iPmhhbmRsZWQgZGFyayBtb2RlPC9hPi4gPC9wPgoKCgo8cD5HcmVhdCB3b3JrLCBzaXIuPC9wPgo8cD5UaGUgcG9zdCA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tL2dlb2Zmcy1yZWRlc2lnbi1wb3N0cy8iPkdlb2ZmJiM4MjE3O3MgUmVkZXNpZ24gUG9zdHM8L2E+IGFwcGVhcmVkIGZpcnN0IG9uIDxhIHJlbD0ibm9mb2xsb3ciIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20iPkNTUy1Ucmlja3M8L2E+LjwvcD4KXV0+PC9jb250ZW50OmVuY29kZWQ+CgkJCQkJCQk8d2Z3OmNvbW1lbnRSc3M+aHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9nZW9mZnMtcmVkZXNpZ24tcG9zdHMvZmVlZC88L3dmdzpjb21tZW50UnNzPgoJCTxzbGFzaDpjb21tZW50cz4wPC9zbGFzaDpjb21tZW50cz4KCQkJCQkJPHBvc3QtaWQgeG1sbnM9ImNvbS13b3JkcHJlc3M6ZmVlZC1hZGRpdGlvbnM6MSI+MzA0ODA2PC9wb3N0LWlkPgk8L2l0ZW0+CgkJPGl0ZW0+CgkJPHRpdGxlPkdvb2dsZSBGb250cyArIFZhcmlhYmxlIEZvbnRzPC90aXRsZT4KCQk8bGluaz5odHRwczovL2Nzcy10cmlja3MuY29tL2dvb2dsZS1mb250cy12YXJpYWJsZS1mb250cy88L2xpbms+CgkJCQk8Y29tbWVudHM+aHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9nb29nbGUtZm9udHMtdmFyaWFibGUtZm9udHMvI2NvbW1lbnRzPC9jb21tZW50cz4KCQkJCTxwdWJEYXRlPlNhdCwgMDcgTWFyIDIwMjAgMTg6NTg6MzQgKzAwMDA8L3B1YkRhdGU+CgkJPGRjOmNyZWF0b3I+PCFbQ0RBVEFbQ2hyaXMgQ295aWVyXV0+PC9kYzpjcmVhdG9yPgoJCQkJPGNhdGVnb3J5PjwhW0NEQVRBW0FydGljbGVdXT48L2NhdGVnb3J5PgoKCQk8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHBzOi8vY3NzLXRyaWNrcy5jb20vP3A9MzA0Nzg2PC9ndWlkPgoJCQkJPGRlc2NyaXB0aW9uPjwhW0NEQVRBWzxwPkkgc2VlIDxhIGhyZWY9Imh0dHBzOi8vZm9udHMuZ29vZ2xlLmNvbS8iPkdvb2dsZSBGb250czwvYT4gcm9sbGVkIG91dCBhIG5ldyBkZXNpZ24gKDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vZ29vZ2xlZm9udHMvc3RhdHVzLzEyMzQ5NjcwMDAxOTMxNTA5NzgiPlR3ZWV0PC9hPikuIENvbXBhcmVkIHRvIHRoZSBsYXN0IGJpZyByZWRlc2lnbiwgdGhpcyBmZWVscyBtdWNoIG1vcmUgaXRlcmF0aXZlLiBJIGNhbiBiYXJlbHkgdGVsbCB0aGUgZGlmZmVyZW5jZSByZWFsbHksIGV4Y2VwdCBpdCdzIGJsdWUgaW5zdGVhZCBvZiByZWQgYW5kIHRoaXMgb25lIHByZXR0eSByYWQgY2hlY2tib3g6IDxzdHJvbmc+U2hvdyBvbmx5IHZhcmlhYmxlIGZvbnRzPC9zdHJvbmc+LjwvcD4KPHA+QW4gb3B0aW9uIHRvIDxlbT5vbmx5PC9lbT4gc2hvdyB2YXJpYWJsZSBmb250cyBpcyBhIHByZXR0eSBib2xkIGZlYXR1cmUgZm9yIHRoZSBtYWluIG5hdmlnYXRpb24gdXAgdGhlcmUuIFRoYXQncyBhIHN0cm9uZyBjb21taXRtZW50IHRvIHRoaXMgZmVhdHVyZS4gV2l0aCBHb29nbGUgRm9udHMgaGF2aW5nIGFib3V0IDkwJSBvZiB0aGUgJiM4MjMwOyA8YSBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tL2dvb2dsZS1mb250cy12YXJpYWJsZS1mb250cy8iIGNsYXNzPSJyZWFkLW1vcmUiPlJlYWQgYXJ0aWNsZSA8L2E+PC9wPgo8cD5UaGUgcG9zdCA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tL2dvb2dsZS1mb250cy12YXJpYWJsZS1mb250cy8iPkdvb2dsZSBGb250cyArIFZhcmlhYmxlIEZvbnRzPC9hPiBhcHBlYXJlZCBmaXJzdCBvbiA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tIj5DU1MtVHJpY2tzPC9hPi48L3A+Cl1dPjwvZGVzY3JpcHRpb24+CgkJCQkJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVsKPHA+SSBzZWUgPGEgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGUuY29tLyI+R29vZ2xlIEZvbnRzPC9hPiByb2xsZWQgb3V0IGEgbmV3IGRlc2lnbiAoPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9nb29nbGVmb250cy9zdGF0dXMvMTIzNDk2NzAwMDE5MzE1MDk3OCI+VHdlZXQ8L2E+KS4gQ29tcGFyZWQgdG8gdGhlIGxhc3QgYmlnIHJlZGVzaWduLCB0aGlzIGZlZWxzIG11Y2ggbW9yZSBpdGVyYXRpdmUuIEkgY2FuIGJhcmVseSB0ZWxsIHRoZSBkaWZmZXJlbmNlIHJlYWxseSwgZXhjZXB0IGl0J3MgYmx1ZSBpbnN0ZWFkIG9mIHJlZCBhbmQgdGhpcyBvbmUgcHJldHR5IHJhZCBjaGVja2JveDogPHN0cm9uZz5TaG93IG9ubHkgdmFyaWFibGUgZm9udHM8L3N0cm9uZz4uPC9wPgoKCgo8c3BhbiBpZD0ibW9yZS0zMDQ3ODYiPjwvc3Bhbj4KCgoKPGZpZ3VyZSBjbGFzcz0id3AtYmxvY2staW1hZ2Ugc2l6ZS1sYXJnZSI+PGltZyBzcmM9Imh0dHBzOi8vaTEud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL2dvb2dsZS1mb250cy1yZWRlc2lnbi5wbmc/Zml0PTEwMjQlMkM2MzUmYW1wO3NzbD0xIiBhbHQ9IiIgY2xhc3M9IndwLWltYWdlLTMwNDc4OCIgc3Jjc2V0PSJodHRwczovL2kxLndwLmNvbS9jc3MtdHJpY2tzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy9nb29nbGUtZm9udHMtcmVkZXNpZ24ucG5nP3c9Mjk1NiZhbXA7c3NsPTEgMjk1NncsIGh0dHBzOi8vaTEud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL2dvb2dsZS1mb250cy1yZWRlc2lnbi5wbmc/cmVzaXplPTMwMCUyQzE4NiZhbXA7c3NsPTEgMzAwdywgaHR0cHM6Ly9pMS53cC5jb20vY3NzLXRyaWNrcy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvZ29vZ2xlLWZvbnRzLXJlZGVzaWduLnBuZz9yZXNpemU9MTAyNCUyQzYzNSZhbXA7c3NsPTEgMTAyNHcsIGh0dHBzOi8vaTEud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL2dvb2dsZS1mb250cy1yZWRlc2lnbi5wbmc/cmVzaXplPTc2OCUyQzQ3NiZhbXA7c3NsPTEgNzY4dywgaHR0cHM6Ly9pMS53cC5jb20vY3NzLXRyaWNrcy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvZ29vZ2xlLWZvbnRzLXJlZGVzaWduLnBuZz9yZXNpemU9MTUzNiUyQzk1MyZhbXA7c3NsPTEgMTUzNncsIGh0dHBzOi8vaTEud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL2dvb2dsZS1mb250cy1yZWRlc2lnbi5wbmc/cmVzaXplPTIwNDglMkMxMjcxJmFtcDtzc2w9MSAyMDQ4dywgaHR0cHM6Ly9pMS53cC5jb20vY3NzLXRyaWNrcy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvZ29vZ2xlLWZvbnRzLXJlZGVzaWduLnBuZz9yZXNpemU9MTAwMCUyQzYyMCZhbXA7c3NsPTEgMTAwMHciIHNpemVzPSIobWluLXdpZHRoOiA3MzVweCkgODY0cHgsIDk2dnciIC8+PC9maWd1cmU+CgoKCjxwPkFuIG9wdGlvbiB0byA8ZW0+b25seTwvZW0+IHNob3cgdmFyaWFibGUgZm9udHMgaXMgYSBwcmV0dHkgYm9sZCBmZWF0dXJlIGZvciB0aGUgbWFpbiBuYXZpZ2F0aW9uIHVwIHRoZXJlLiBUaGF0J3MgYSBzdHJvbmcgY29tbWl0bWVudCB0byB0aGlzIGZlYXR1cmUuIFdpdGggR29vZ2xlIEZvbnRzIGhhdmluZyBhYm91dCA5MCUgb2YgdGhlIG1hcmtldCBzaGFyZSBvZiBob3N0ZWQgd2ViIGZvbnRzIGFuZCBzZXJ2aW5nIDxhIGhyZWY9Imh0dHBzOi8vZm9udHMuZ29vZ2xlLmNvbS9hbmFseXRpY3MiPnRyaWxsaW9uczwvYT4gb2YgcmVxdWVzdHMsIHRoYXQncyBnb2luZyB0byBzcGlrZSBpbnRlcmVzdCBhbmQgdXNhZ2Ugb2YgPGEgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9ndWlkZXMvb3BlbnR5cGUtdmFyaWFibGUtZm9udHMvIj52YXJpYWJsZSBmb250czwvYT4gaW4gYSBiaWcgd2F5LiBXZWIgZGVzaWduZXJzIGFuZCBkZXZlbG9wZXJzIGhhdmUgYmVlbiBleGNpdGVkIGFib3V0IHZhcmlhYmxlIGZvbnRzIGZvciBhIHdoaWxlLCBidXQgSSdkIGJldCB0aGlzIGlzIHRoZSB5ZWFyIHdlIHN0YXJ0IHNlZWluZyBpdCBpbiB0aGUgd2lsZCBpbiBhIG11Y2ggYmlnZ2VyIHdheS48L3A+CgoKCjxwPlNvbWV0aGluZyBhYm91dCB2YXJpYWJsZSBmb250cyBpbnNwaXJlZCB0aGUgbWljcm8tc2l0ZS4gU2VlIDxhIGhyZWY9Imh0dHBzOi8vdi1mb250cy5jb20vIj52LWZvbnRzLmNvbTwvYT4gYW5kIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmF4aXMtcHJheGlzLm9yZy9zcGVjaW1lbnMvX19ERUZBVUxUX18iPkF4aXMtUHJheGlzPC9hPi4gIEhlcmUncyBjb21lIGFub3RoZXIgb25lOiA8YSBocmVmPSJodHRwczovL3ZhcmlhYmxlZm9udHMuaW8vIj52YXJpYWJsZWZvbnRzLmlvPC9hPiEgTGlrZSB0aGUgb3RoZXJzLCBpdCBhbHNvIGhhcyBpbnRlcmFjdGl2ZSBleGFtcGxlcywgYnV0IGl0J3MgYWxzbyBmdWxsIG9mIGRpcmVjdCB1cC10by1kYXRlIGFkdmljZSBhbmQgbGlua3MgdG8gcmVzb3VyY2VzLiA8L3A+CgoKCjxmaWd1cmUgY2xhc3M9IndwLWJsb2NrLWltYWdlIHNpemUtbGFyZ2UiPjxpbWcgc3JjPSJodHRwczovL2kwLndwLmNvbS9jc3MtdHJpY2tzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy92YXJpYWJsZS1mb250cy5wbmc/Zml0PTEwMjQlMkM4NDYmYW1wO3NzbD0xIiBhbHQ9IiIgY2xhc3M9IndwLWltYWdlLTMwNDc4OSIgc3Jjc2V0PSJodHRwczovL2kwLndwLmNvbS9jc3MtdHJpY2tzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy92YXJpYWJsZS1mb250cy5wbmc/dz0yNTAyJmFtcDtzc2w9MSAyNTAydywgaHR0cHM6Ly9pMC53cC5jb20vY3NzLXRyaWNrcy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvdmFyaWFibGUtZm9udHMucG5nP3Jlc2l6ZT0zMDAlMkMyNDgmYW1wO3NzbD0xIDMwMHcsIGh0dHBzOi8vaTAud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL3ZhcmlhYmxlLWZvbnRzLnBuZz9yZXNpemU9MTAyNCUyQzg0NiZhbXA7c3NsPTEgMTAyNHcsIGh0dHBzOi8vaTAud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL3ZhcmlhYmxlLWZvbnRzLnBuZz9yZXNpemU9NzY4JTJDNjM0JmFtcDtzc2w9MSA3Njh3LCBodHRwczovL2kwLndwLmNvbS9jc3MtdHJpY2tzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy92YXJpYWJsZS1mb250cy5wbmc/cmVzaXplPTE1MzYlMkMxMjY4JmFtcDtzc2w9MSAxNTM2dywgaHR0cHM6Ly9pMC53cC5jb20vY3NzLXRyaWNrcy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvdmFyaWFibGUtZm9udHMucG5nP3Jlc2l6ZT0yMDQ4JTJDMTY5MSZhbXA7c3NsPTEgMjA0OHcsIGh0dHBzOi8vaTAud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL3ZhcmlhYmxlLWZvbnRzLnBuZz9yZXNpemU9MTAwMCUyQzgyNiZhbXA7c3NsPTEgMTAwMHciIHNpemVzPSIobWluLXdpZHRoOiA3MzVweCkgODY0cHgsIDk2dnciIC8+PC9maWd1cmU+CgoKCjxwPkFub3RoZXIgdGhpbmcgdGhhdCdzIHJlYWxseSBncmVhdCB0aGF0IEdvb2dsZSBGb250cyBoYXMgZG9uZSBzb21ld2hhdCByZWNlbnRseSBpcyBhbGxvd2VkIGZvciB0aGUgdXNhZ2Ugb2YgPGNvZGU+PGEgaHJlZj0iaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9hbG1hbmFjL3Byb3BlcnRpZXMvZi9mb250LWRpc3BsYXkvIj5mb250LWRpc3BsYXk8L2E+PC9jb2RlPi4gSXQncyBnb3QgYSBnb29kIGRlZmF1bHQgKDxjb2RlPnN3YXA8L2NvZGU+KSwgYW5kIGlzIGVhc2lseSBjaGFuZ2FibGUgYXMgYSBxdWVyeSBwYXJhbS4gTWF0dCBIb2JicyBoYXMgPGEgaHJlZj0iaHR0cHM6Ly9ub29zaHUuZ2l0aHViLmlvL2Jsb2cvMjAyMC8wMi8yMy9pbXByb3ZpbmctcGVyY2VpdmVkLXBlcmZvcm1hbmNlLXdpdGgtdGhlLWNzcy1mb250LWRpc3BsYXktcHJvcGVydHkvIj5hIHJlY2VudCBhcnRpY2xlPC9hPiBhYm91dCB3aGF0IGl0IGlzLCBob3cgaW1wb3J0YW50IGl0IGNhbiBiZSwgYW5kIGhvdyB0byB1c2UgaXQuIDwvcD4KCgoKPHA+QW5kIHdoaWxlIHdlJ3JlIHRhbGtpbmcgR29vZ2xlIEZvbnRzLCBJIHJhbiBhY3Jvc3MgdGhlIGJyb3dzZXIgZXh0ZW5zaW9uIDxhIGhyZWY9Imh0dHBzOi8vZ2V0c25hcGZvbnQuY29tLyI+U25hcGZvbnQ8L2E+IHRoZSBvdGhlciBkYXkuIEl0J3MgYSBwYXktd2hhdC15b3Utd2FudCB0aGluZyAoSSB0b3NzZWQgdGhlbSBhIGZpdmVyKS48L3A+CgoKCjxmaWd1cmUgY2xhc3M9IndwLWJsb2NrLWltYWdlIHNpemUtbGFyZ2UiPjxpbWcgc3JjPSJodHRwczovL2kwLndwLmNvbS9jc3MtdHJpY2tzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy9zbmFwZm9udC5wbmc/Zml0PTEwMjQlMkM5MDMmYW1wO3NzbD0xIiBhbHQ9IiIgY2xhc3M9IndwLWltYWdlLTMwNDc5MCIgc3Jjc2V0PSJodHRwczovL2kwLndwLmNvbS9jc3MtdHJpY2tzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy9zbmFwZm9udC5wbmc/dz0yMzQyJmFtcDtzc2w9MSAyMzQydywgaHR0cHM6Ly9pMC53cC5jb20vY3NzLXRyaWNrcy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvc25hcGZvbnQucG5nP3Jlc2l6ZT0zMDAlMkMyNjUmYW1wO3NzbD0xIDMwMHcsIGh0dHBzOi8vaTAud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL3NuYXBmb250LnBuZz9yZXNpemU9MTAyNCUyQzkwMyZhbXA7c3NsPTEgMTAyNHcsIGh0dHBzOi8vaTAud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL3NuYXBmb250LnBuZz9yZXNpemU9NzY4JTJDNjc3JmFtcDtzc2w9MSA3Njh3LCBodHRwczovL2kwLndwLmNvbS9jc3MtdHJpY2tzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy9zbmFwZm9udC5wbmc/cmVzaXplPTE1MzYlMkMxMzU1JmFtcDtzc2w9MSAxNTM2dywgaHR0cHM6Ly9pMC53cC5jb20vY3NzLXRyaWNrcy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvc25hcGZvbnQucG5nP3Jlc2l6ZT0yMDQ4JTJDMTgwNyZhbXA7c3NsPTEgMjA0OHcsIGh0dHBzOi8vaTAud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL3NuYXBmb250LnBuZz9yZXNpemU9MTAwMCUyQzg4MiZhbXA7c3NsPTEgMTAwMHciIHNpemVzPSIobWluLXdpZHRoOiA3MzVweCkgODY0cHgsIDk2dnciIC8+PC9maWd1cmU+CgoKCjxwPkl0IGp1c3QgaGFyZC1yZXBsYWNlcyBldmVyeSBmb250IG9uIHRoZSBzaXRlIHdpdGggb25lIHlvdSBwaWNrIHRvIGdldCBhIHF1aWNrIHRhc3RlIG9mIGl0LiBUaGVyZSBhcmUgbm8gb3B0aW9ucywgc28gaXQncyBub3QgZm9yIGZpbmUtdHVuaW5nIGFueSBjaG9pY2VzLiBUaGUgIkhlYWRpbmciIGJ1dHRvbiBkaWRuJ3QgZXZlbiB3b3JrIGZvciBtZS4gQnV0IEkgbGlrZSBob3cgc2ltcGxlIGFuZCBlYXN5IGl0IHdhcyB0byBnZXQgYSB0YXN0ZSBmb3IgYSBzaXRlIHdpdGggYSBuZXcgZm9udC4gPC9wPgo8cD5UaGUgcG9zdCA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tL2dvb2dsZS1mb250cy12YXJpYWJsZS1mb250cy8iPkdvb2dsZSBGb250cyArIFZhcmlhYmxlIEZvbnRzPC9hPiBhcHBlYXJlZCBmaXJzdCBvbiA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tIj5DU1MtVHJpY2tzPC9hPi48L3A+Cl1dPjwvY29udGVudDplbmNvZGVkPgoJCQkJCQkJPHdmdzpjb21tZW50UnNzPmh0dHBzOi8vY3NzLXRyaWNrcy5jb20vZ29vZ2xlLWZvbnRzLXZhcmlhYmxlLWZvbnRzL2ZlZWQvPC93Znc6Y29tbWVudFJzcz4KCQk8c2xhc2g6Y29tbWVudHM+Mjwvc2xhc2g6Y29tbWVudHM+CgkJCQkJCTxwb3N0LWlkIHhtbG5zPSJjb20td29yZHByZXNzOmZlZWQtYWRkaXRpb25zOjEiPjMwNDc4NjwvcG9zdC1pZD4JPC9pdGVtPgoJCTxpdGVtPgoJCTx0aXRsZT5XaGF0IHRvIFVzZSBJbnN0ZWFkIG9mIE51bWJlciBJbnB1dHM8L3RpdGxlPgoJCTxsaW5rPmh0dHBzOi8vY3NzLXRyaWNrcy5jb20vd2hhdC10by11c2UtaW5zdGVhZC1vZi1udW1iZXItaW5wdXRzLzwvbGluaz4KCQkJCTxjb21tZW50cz5odHRwczovL2Nzcy10cmlja3MuY29tL3doYXQtdG8tdXNlLWluc3RlYWQtb2YtbnVtYmVyLWlucHV0cy8jY29tbWVudHM8L2NvbW1lbnRzPgoJCQkJPHB1YkRhdGU+RnJpLCAwNiBNYXIgMjAyMCAyMToxODoxNiArMDAwMDwvcHViRGF0ZT4KCQk8ZGM6Y3JlYXRvcj48IVtDREFUQVtDaHJpcyBDb3lpZXJdXT48L2RjOmNyZWF0b3I+CgkJCQk8Y2F0ZWdvcnk+PCFbQ0RBVEFbQXJ0aWNsZV1dPjwvY2F0ZWdvcnk+CgoJCTxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS8/cD0zMDQ1NTE8L2d1aWQ+CgkJCQk8ZGVzY3JpcHRpb24+PCFbQ0RBVEFbPHA+WW91IG1pZ2h0IHJlYWNoIGZvciA8Y29kZT4mIzYwO2lucHV0IHR5cGU9Im51bWJlciYjNjI7PC9jb2RlPiB3aGVuIHlvdSdyZSwgeW91IGtub3csIHRyeWluZyB0byBjb2xsZWN0IGEgbnVtYmVyIGluIGEgZm9ybS4gQnV0IGl0J3MgZ290IGFsbCBzb3J0cyBvZiBpc3N1ZXMuIEZvciBvbmUsIHNvbWV0aW1lcyB3aGF0IHlvdSB3YW50IDxlbT5raW5kYTwvZW0+IGxvb2tzIGxpa2UgYSBudW1iZXIsIGJ1dCBpc24ndCBvbmUgKGxpa2UgaG93IGEgY3JlZGl0IGNhcmQgbnVtYmVyIGhhcyBzcGFjZXMpLCBiZWNhdXNlIGl0J3MgcmVhbGx5IGp1c3QgYSBzdHJpbmcgb2YgbnVtYmVycy4gRXZlbiBtb3JlIGltcG9ydGFudGx5LCB0aGVyZSBhcmUgYSB2YXJpZXR5IG9mIHNjcmVlbiByZWFkZXIgcHJvYmxlbXMuPC9wPgo8cD5IYW5uYSBMYWFrc28gPGEgaHJlZj0iaHR0cHM6Ly90ZWNobm9sb2d5LmJsb2cuZ292LnVrLzIwMjAvMDIvMjQvd2h5LXRoZS1nb3YtdWstZGVzaWduLXN5c3RlbS10ZWFtLWNoYW5nZWQtdGhlLWlucHV0LXR5cGUtZm9yLW51bWJlcnMvIj5kb2N1bWVudHMgdGhlIHByb2JsZW1zPC9hPiBmb3IgR09WLlVLLiBUaGlzIGlzIHdoYXQgdGhleSBsYW5kZWQgb246PC9wPgo8cHJlIHJlbD0iSFRNTCIgY2xhc3M9IndwLWJsb2NrLWNzc3RyaWNrcy1jb2RlLWJsb2NrIGxhbmd1YWdlLW1hcmt1cCIgZGF0YS1saW5lPSIiPjxjb2RlIG1hcmt1cD0idHQiPiYjNjA7aW5wdXQgPC9jb2RlPjwvcHJlPgo8cD4mIzgyMzA7IDxhIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20vd2hhdC10by11c2UtaW5zdGVhZC1vZi1udW1iZXItaW5wdXRzLyIgY2xhc3M9InJlYWQtbW9yZSI+UmVhZCBhcnRpY2xlIDwvYT48L3A+CjxwPlRoZSBwb3N0IDxhIHJlbD0ibm9mb2xsb3ciIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20vd2hhdC10by11c2UtaW5zdGVhZC1vZi1udW1iZXItaW5wdXRzLyI+V2hhdCB0byBVc2UgSW5zdGVhZCBvZiBOdW1iZXIgSW5wdXRzPC9hPiBhcHBlYXJlZCBmaXJzdCBvbiA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tIj5DU1MtVHJpY2tzPC9hPi48L3A+Cl1dPjwvZGVzY3JpcHRpb24+CgkJCQkJCQkJPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVsKPHA+WW91IG1pZ2h0IHJlYWNoIGZvciA8Y29kZT4mbHQ7aW5wdXQgdHlwZT0ibnVtYmVyJmd0OzwvY29kZT4gd2hlbiB5b3UncmUsIHlvdSBrbm93LCB0cnlpbmcgdG8gY29sbGVjdCBhIG51bWJlciBpbiBhIGZvcm0uIEJ1dCBpdCdzIGdvdCBhbGwgc29ydHMgb2YgaXNzdWVzLiBGb3Igb25lLCBzb21ldGltZXMgd2hhdCB5b3Ugd2FudCA8ZW0+a2luZGE8L2VtPiBsb29rcyBsaWtlIGEgbnVtYmVyLCBidXQgaXNuJ3Qgb25lIChsaWtlIGhvdyBhIGNyZWRpdCBjYXJkIG51bWJlciBoYXMgc3BhY2VzKSwgYmVjYXVzZSBpdCdzIHJlYWxseSBqdXN0IGEgc3RyaW5nIG9mIG51bWJlcnMuIEV2ZW4gbW9yZSBpbXBvcnRhbnRseSwgdGhlcmUgYXJlIGEgdmFyaWV0eSBvZiBzY3JlZW4gcmVhZGVyIHByb2JsZW1zLjwvcD4KCgoKPHA+SGFubmEgTGFha3NvIDxhIGhyZWY9Imh0dHBzOi8vdGVjaG5vbG9neS5ibG9nLmdvdi51ay8yMDIwLzAyLzI0L3doeS10aGUtZ292LXVrLWRlc2lnbi1zeXN0ZW0tdGVhbS1jaGFuZ2VkLXRoZS1pbnB1dC10eXBlLWZvci1udW1iZXJzLyI+ZG9jdW1lbnRzIHRoZSBwcm9ibGVtczwvYT4gZm9yIEdPVi5VSy4gVGhpcyBpcyB3aGF0IHRoZXkgbGFuZGVkIG9uOjwvcD4KCgoKPHNwYW4gaWQ9Im1vcmUtMzA0NTUxIj48L3NwYW4+CgoKCjxwcmUgcmVsPSJIVE1MIiBjbGFzcz0id3AtYmxvY2stY3NzdHJpY2tzLWNvZGUtYmxvY2sgbGFuZ3VhZ2UtbWFya3VwIiBkYXRhLWxpbmU9IiI+PGNvZGUgbWFya3VwPSJ0dCI+Jmx0O2lucHV0IHR5cGU9InRleHQiIGlucHV0bW9kZT0ibnVtZXJpYyIgcGF0dGVybj0iWzAtOV0qIj48L2NvZGU+PC9wcmU+CgoKCjxwPlRoZSA8Y29kZT5pbnB1dG1vZGU8L2NvZGU+IGF0dHJpYnV0ZSBpcyBwcmV0dHkgZ3JlYXQsIGFuZCA8YSBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tL2V2ZXJ5dGhpbmcteW91LWV2ZXItd2FudGVkLXRvLWtub3ctYWJvdXQtaW5wdXRtb2RlLyI+d2UgaGF2ZSBhIGRlZXAgZGl2ZSBvbiB0aGF0PC9hPi4gPC9wPgoKCgo8cD5QaGlsIE5hc2ggY2FtZSB0byAoYWxtb3N0KSBzYW1lIGV4YWN0IGNvbmNsdXNpb24sIGFuZCBibG9nZ2VkIGFib3V0IDxhIGhyZWY9Imh0dHBzOi8vd3d3LnR3aWxpby5jb20vYmxvZy9odG1sLWF0dHJpYnV0ZXMtdHdvLWZhY3Rvci1hdXRoZW50aWNhdGlvbi1hdXRvY29tcGxldGUiPmltcHJvdmluZyB0aGUgZXhwZXJpZW5jZSBvZiBhIHR3by1mYWN0b3IgYXV0aCBjb2RlIGlucHV0PC9hPiBvbiB0aGUgVHdpbGlvIGJsb2c6IDwvcD4KCgoKPHByZSByZWw9IkhUTUwiIGNsYXNzPSJ3cC1ibG9jay1jc3N0cmlja3MtY29kZS1ibG9jayBsYW5ndWFnZS1tYXJrdXAiIGRhdGEtbGluZT0iIj48Y29kZSBtYXJrdXA9InR0Ij4mbHQ7aW5wdXQKICB0eXBlPSJ0ZXh0IgogIG5hbWU9InRva2VuIgogIGlkPSJ0b2tlbiIKICBpbnB1dG1vZGU9Im51bWVyaWMiCiAgcGF0dGVybj0iWzAtOV0qIgogIGF1dG9jb21wbGV0ZT0ib25lLXRpbWUtY29kZSIKLz48L2NvZGU+PC9wcmU+CgoKCjxwPlRoYXQgbGFzdCBhdHRyaWJ1dGUgaXMgaW50ZXJlc3RpbmcgYW5kIG5ldyB0byBtZS4gSXQgbWVhbnMgeW91IGdldCB0aGlzIHN1cGVyIGV4dHJhIHVzZWZ1bCBleHBlcmllbmNlIG9uIGJyb3dzZXJzIHRoYXQgc3VwcG9ydCBpdDo8L3A+CgoKCjxmaWd1cmUgY2xhc3M9IndwLWJsb2NrLWltYWdlIHNpemUtbGFyZ2UgaXMtcmVzaXplZCI+PGltZyBzcmM9Imh0dHBzOi8vaTEud3AuY29tL2Nzcy10cmlja3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL3R3by1mYWN0b3ItaW5wdXQucG5nP3NzbD0xIiBhbHQ9ImlPUyBzY3JlZW4gd2l0aCBhIG51bWVyaWMgaW5wdXQgYW5kIGEgdGV4dCBtZXNzYWdlIG9mZmVyaW5nIHRvIGF1dG8tZmlsbCB0aGUgdHdvLWZhY3RvciBhdXRoIiBjbGFzcz0id3AtaW1hZ2UtMzA0NTUzIiBzdHlsZT0id2lkdGg6IDI5MHB4OyIgZGF0YS1yZWNhbGMtZGltcz0iMSI+PC9maWd1cmU+CgoKCjxwPlRoZXJlIGFyZSBvdGhlciBhdXRvY29tcGxldGUgdmFsdWVzLCBhcyBQaGlsIHdyaXRlczo8L3A+CgoKCjxibG9ja3F1b3RlIGNsYXNzPSJ3cC1ibG9jay1xdW90ZSI+PHA+VGhlcmUgYXJlJm5ic3A7PGEgaHJlZj0iaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9BdHRyaWJ1dGVzL2F1dG9jb21wbGV0ZSNWYWx1ZXMiPm1hbnkgYXV0b2NvbXBsZXRlIHZhbHVlcyBhdmFpbGFibGU8L2E+LCBjb3ZlcmluZyBldmVyeXRoaW5nIGZyb20gbmFtZXMgYW5kIGFkZHJlc3NlcyB0byBjcmVkaXQgY2FyZHMgYW5kIG90aGVyIGFjY291bnQgZGV0YWlscy4gRm9yIHNpZ24gdXAgYW5kIGxvZ2luIHRoZXJlIGFyZSBhIGZldyBhdXRvY29tcGxldGUgdmFsdWVzIHRoYXQgc3RhbmQgb3V0IGFzIHVzZWZ1bCBoaW50czombmJzcDs8Y29kZT51c2VybmFtZTwvY29kZT4sJm5ic3A7PGNvZGU+ZW1haWw8L2NvZGU+LCZuYnNwOzxjb2RlPm5ldy1wYXNzd29yZDwvY29kZT4sJm5ic3A7PGNvZGU+Y3VycmVudC1wYXNzd29yZDwvY29kZT4uPGJyPjxicj5Ccm93c2VycyBhbmQgcGFzc3dvcmQgbWFuYWdlcnMgaGF2ZSB2ZXJ5IGdvb2QgaGV1cmlzdGljcyB0byBmaW5kIGxvZ2luIGZvcm1zIG9uIHdlYiBwYWdlcywgYnV0IHVzaW5nIHRoZSZuYnNwOzxjb2RlPnVzZXJuYW1lPC9jb2RlPiZuYnNwO2FuZCZuYnNwOzxjb2RlPmN1cnJlbnQtcGFzc3dvcmQ8L2NvZGU+Jm5ic3A7dmFsdWVzIG1ha2UgaXQgdmVyeSBvYnZpb3VzLiZuYnNwOzwvcD48L2Jsb2NrcXVvdGU+CjxwPlRoZSBwb3N0IDxhIHJlbD0ibm9mb2xsb3ciIGhyZWY9Imh0dHBzOi8vY3NzLXRyaWNrcy5jb20vd2hhdC10by11c2UtaW5zdGVhZC1vZi1udW1iZXItaW5wdXRzLyI+V2hhdCB0byBVc2UgSW5zdGVhZCBvZiBOdW1iZXIgSW5wdXRzPC9hPiBhcHBlYXJlZCBmaXJzdCBvbiA8YSByZWw9Im5vZm9sbG93IiBocmVmPSJodHRwczovL2Nzcy10cmlja3MuY29tIj5DU1MtVHJpY2tzPC9hPi48L3A+Cl1dPjwvY29udGVudDplbmNvZGVkPgoJCQkJCQkJPHdmdzpjb21tZW50UnNzPmh0dHBzOi8vY3NzLXRyaWNrcy5jb20vd2hhdC10by11c2UtaW5zdGVhZC1vZi1udW1iZXItaW5wdXRzL2ZlZWQvPC93Znc6Y29tbWVudFJzcz4KCQk8c2xhc2g6Y29tbWVudHM+NDwvc2xhc2g6Y29tbWVudHM+CgkJCQkJCTxwb3N0LWlkIHhtbG5zPSJjb20td29yZHByZXNzOmZlZWQtYWRkaXRpb25zOjEiPjMwNDU1MTwvcG9zdC1pZD4JPC9pdGVtPgoJPC9jaGFubmVsPgo8L3Jzcz4K
    http_version: null
  recorded_at: Wed, 11 Mar 2020 13:23:51 GMT
recorded_with: VCR 5.1.0
