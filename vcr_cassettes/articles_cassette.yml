---
http_interactions:
- request:
    method: get
    uri: https://hackernoon.com/tagged/ruby/feed
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.10.3
      Date:
      - Wed, 11 Mar 2020 13:23:50 GMT
      Content-Type:
      - application/rss+xml
      Content-Length:
      - '15341'
      Connection:
      - keep-alive
      X-Guploader-Uploadid:
      - AEnB2Uq_YxdHLXbIOdapJr_yC-cmJLmTdfZBUScZEOMg1RAq0txOuVxILs4HtSgQMu0Ulac4uRJjAwce2HyXMMcapBgPXJmmuA
      Expires:
      - Wed, 11 Mar 2020 14:23:50 GMT
      Cache-Control:
      - public, max-age=3600
      Last-Modified:
      - Tue, 10 Mar 2020 10:44:14 GMT
      Etag:
      - '"449e430a66cf99703b1f978a02b6478c"'
      X-Goog-Generation:
      - '1583837054734612'
      X-Goog-Metageneration:
      - '1'
      X-Goog-Stored-Content-Encoding:
      - gzip
      X-Goog-Stored-Content-Length:
      - '15341'
      X-Goog-Hash:
      - crc32c=Z1hc3Q==
      - md5=RJ5DCmbPmXA7H5eKArZHjA==
      X-Goog-Storage-Class:
      - MULTI_REGIONAL
      Accept-Ranges:
      - bytes
      Vary:
      - Accept-Encoding
      - Origin
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 11 Mar 2020 13:23:50 GMT
recorded_with: VCR 5.1.0
